<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LuminUnity</name>
    </assembly>
    <members>
        <member name="T:UnityEngine.XR.MagicLeap.InvalidInstanceException">
            <summary>
            Simple custom exception for instance error checking
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.InvalidInstanceException.#ctor(System.String)">
            <summary>
            Constructor to create an InvalidInstanceException with a message.
            </summary>
            <param name="message">Message to provide in the exception</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLAPISingleton`1">
            <summary>
            MLAPISingleton class contains a template for singleton APIs
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1._instance">
            <summary>
            Singleton object instance.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1._perceptionHandle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1._perceptionHasStarted">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1.DllNotFoundError">
            <summary>
            Error message displayed to user when API dll was not found
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.IsValidInstance">
            <summary>
            Utility function returns true is the instance exists
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.CheckValidInstance">
            <summary>
            Utility function checks for valid instance and throws an execption if not found
            </summary>
            <throw> InvalidInstanceException </throw>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Instance">
            <summary>
            Returns the singleton object instance.
            </summary>
            <returns>The singleton object instance.</returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAPISingleton`1.IsStarted">
            <summary>
            Determine if the API was started successfully
            </summary>
            <returns> Returns false if no instance exists</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.BaseStart(System.Boolean)">
             <summary>
             Utility function set up instance and tracks successfull _startCount
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (MagicLeap XR Loader not loaded,
             no device, dll not found, no API symbols).
             Otherwise, see specific implemetation of StartAPI()
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Stop">
            <summary>
            Stop the API
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Finalize">
            <summary>
            MLAPISingleton finalizer used to ensure we dispose data correctly.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.StopAPI">
            <summary>
            Decrement API instance count and cleanup if this is the last one.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.StartAPI">
            <summary>
            Do API specific creation/initialization of ML resources for this API
            such as create trackers.
            </summary>
            \endinternal
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
            <param name="isSafeToAccessManagedObjects">Boolean that tells if it is safe to clear managed memory</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Update(System.Single)">
            <summary>
            Update function registered with MagicLeapDevice to do API specific per frame work.
            </summary>
            <param name="timeDelta">The time in seconds it took to complete the last frame.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.OnApplicationPause(System.Boolean)">
            <summary>
            Callback sent to all MagicLeap APIs on application pause.
            </summary>
            <param name="pauseStatus">True if the application is paused, else False. </param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLAudio">
            <summary>
            Manages Audio.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLAudio.OnMasterVolumeChanged">
            <summary>
            Raised whenever the master volume gets changed.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLAudio.OnMicrophoneMuteChanged">
            <summary>
            Raised whenever the global microphone mute gets changed.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLAudio.OnAudioOutputDeviceChanged">
            <summary>
            Raised whenever the audio output device gets changed.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAudio.AudioOutputDevice">
            <summary>
            The currently active audio output device.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAudio.MasterVolume">
            <summary>
            Returns the master volume for the device.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAudio.MicrophoneMuted">
            <summary>
            Get/Set the microphone muted status.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.CreateInstance">
            <summary>
            static instance of the MLAudio class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.Start">
             <summary>
             Starts the Audio API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.StartAPI">
            <summary>
            Called by MLAPISingleton to start the API
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.CleanupAPI(System.Boolean)">
            <summary>
            Called by MLAPISingleton on destruction
            </summary>
            <param name="isSafeToAccessManagedObjects"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.Update(System.Single)">
            <summary>
            Called every device frame
            </summary>
            <param name="timeDelta"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.GetMasterVolume(System.Single@)">
             <summary>
             Returns the master volume for the audio system.
             The range of the volume is 0-10, with 0 being silent and 10 being full volume.
             </summary>
             <param name="volume"></param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.GetMicrophoneMuted(System.Boolean@)">
             <summary>
             Returns the mute state of the microphone.
             </summary>
             <param name="isMuted"></param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.RegisterOnVolumeChangeCallback">
             <summary>
             Registers a callback for the device volume change event.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.UnregisterOnVolumeChangeCallback">
             <summary>
             Unregisters a previously registered callback for the device volume change event.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.RegisterOnMicrophoneMuteCallback">
             <summary>
             Registers a callback for the device microphone mute change event.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.UnregisterOnMicrophoneMuteCallback">
             <summary>
             Unregisters a previously registered callback for the device microphone mute change event.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if a parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if AudioCaptureMic privilege is denied.
            
             MLResult.Code will be MLResultCode.AudioNotImplemented if the function is not implemented.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAudio.QueueCallback(System.Action)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCamera">
            <summary>
            MLCamera class exposes static functions to query camera related
            functions. Most functions are currently a direct pass through functions to the
            native C-API functions and incur no overhead.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceAvailable">
            <summary>Camera status callback, device available.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceUnavailable">
            <summary>Camera status callback, device unavailable.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceOpened">
            <summary>Camera status callback, device opened.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceClosed">
            <summary>Camera status callback, device closed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceDisconnected">
            <summary>Camera status callback, device disconnected.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceError">
            <summary>Camera status callback, device error.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureStarted">
            <summary>Camera capture callback, capture started.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureFailed">
            <summary>Camera capture callback, capture failed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureBufferLost">
            <summary>Camera capture callback, capture buffer lost.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureProgressed">
            <summary>Camera capture callback, capture progressed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompleted">
            <summary>
            Camera capture callback, capture completed.
            Video capture will execute a capture completed callback every frame.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompletedSettings">
            <summary>
            Camera capture callback, capture completed with settings results from the capture.
            A Video capture will cause this callback to execute on every video frame capture.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnRawImageAvailable">
            <summary>Camera capture callback, capture raw image available.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnRawImageAvailableYUV">
            <summary>Camera capture callback, capture raw image available, parameters are YUVFrameInfo.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnRawVideoFrameAvailableYUV">
            <summary>Camera capture callback, capture raw video frame, parameters are YUVFrameInfo and MLCameraFrameMetadata.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera.RawVideoFrameDataFilter">
            <summary>
            Raw video frame capture filter, this can be used to specify if the OnRawVideoFrameAvailableYUV callback
            will be passed all 3 YUV planes (RawVideoFrameData.IntensityAndColor) or just the Y (RawVideoFrameData.Intensity) plane.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera._queuedActions">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera._rawVideoFrameQueueLockObject">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.MaximumRawVideoFrameQueue">
            <summary>
            Maximum number of raw video frames that are queued per Unity frame.
            If more frames are received than this number, the oldest frames are dropped.
            1 is the default; this means only the most recent raw video frame will be sent
            to ther user per game frame.
            You can set this value to 0 to have no limit to the size of the queue,
            however, if it is not drained quick enough, you may run out of memory.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.DroppedRawVideoFramesLastUpdate">
            <summary>
            Count of the amount of raw video frames dropped last update that were
            beyond the currently set MaximumRawVideoFrameQueue.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.Settings">
            <summary>
            Camera settings object for setting or getting camera settings
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.Previewing">
            <summary>
            Camera Preview is enabled and texture is being rendered to
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera.PreviewTextureWidth">
            <summary>
            Width of the internal camera preview texture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera.PreviewTextureHeight">
            <summary>
            Height of the internal camera preview texture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.PreviewTexture2D">
            <summary>
            Texture that has the camera preview rendered to it when Previewing
            null when preview is not available yet.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.QueueCallback(System.Action)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.QueueRawVideoFrameCallback(System.Action)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CreateInstance">
            <summary>
            static instance of the MLCamera class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Start">
             <summary>
             Starts the Camera API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartAPI">
            <summary>
            Start Camera API and set up callbacks.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Connect">
             <summary>
             Connect to camera resource and register callbacks.
             Only one connection to the camera resource is supported at a time.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed to connect to camera device due to null pointer.
            
             MLResult.Code will be MLResultCode.Timeout if failed to connect to camera device due to timeout.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Disconnect">
             <summary>
             Disconnect from camera resource and unregister callbacks.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.DisconnectNative">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CaptureImage(System.String)">
             <summary>
             Captures an image from the camera and writes a jpeg to the specified path.
             </summary>
             <param name="filePath">Path to write the captured image.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed due to null pointer.
            
             MLResult.Code will be MLResultCode.MediaGenericBadType if failed due to invalid capture type.
            
             MLResult.Code will be MLResultCode.MediaGenericInvalidOperation if failed due to on-going video recording.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CaptureRawImageAsync(UnityEngine.XR.MagicLeap.MLCameraOutputFormat)">
             <summary>
             Initiates a raw image capture request.  Register to OnRawImageAvailable event to get result if format is JPEG.
             OnRawImageAvailableYUV to get result if format is YUV_420_888
             If this function is invoked before the camera sensor has locked AE and AWB,
             it will be blocked until AE (Auto Exposure), AWB (Auto Whitebalance) is locked and then starts to capture. The capture itself is asynchronous
             </summary>
             <param name="outputFormat">MLCameraOutputFormat of the output type</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed due to null pointer.
            
             MLResult.Code will be MLResultCode.MediaGenericBadType if failed due to invalid capture type.
            
             MLResult.Code will be MLResultCode.MediaGenericInvalidOperation if failed due to on-going video recording.
            
             MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartVideoCapture(System.String)">
             <summary>
             Starts capturing a video to write as an MP4 to the specified path.
             </summary>
             <param name="filePath">Path to write the video.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed due to null pointer.
            
             MLResult.Code will be MLResultCode.MediaGenericBadType if failed to prepare for capture due to invalid capture type.
            
             MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartRawVideoCapture">
             <summary>
             Starts capturing video from the color camera. Frames are returned with OnRawVideoFrameAvailableYUV callback.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed due to null pointer.
            
             MLResult.Code will be MLResultCode.MediaGenericBadType if failed to prepare for capture due to invalid capture type.
            
             MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StopVideoCapture">
             <summary>
             Stops capturing video. If initiated with StartVideoCapture(string) also
             write as an MP4 to the path specified with StartVideoCapture(string).
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed due to null pointer.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to start video recording due to internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.PrepareCapture(UnityEngine.XR.MagicLeap.MLCameraCaptureType,UnityEngine.XR.MagicLeap.MLCameraCaptureSettings@)">
             <summary>
             Prepare a capture for manual submission, allowing modifying of the capture settings.
             </summary>
             <param name="captureType">The type of capture you will be submitting. This must match the capture type of SubmitCapture()</param>
             <param name="captureSettings">Structure containing all of the existing capture settings that can be viewed or modified. Must be passed into SubmitCapture</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed to prepare for capture due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed to prepare for capture due to null pointer.
            
             MLResult.Code will be MLResultCode.MediaGenericBadType if failed to prepare for capture due to invalid capture type.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to prepare for capture due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.SubmitCapture(UnityEngine.XR.MagicLeap.MLCameraCaptureSettings@,System.String)">
             <summary>
             Submit a previously prepared capture and execute the capture itself.
             If MLCameraCaptureType.Video is submitted, users must call StopVideoCapture() to stop capture at a later time.
             </summary>
             <param name="captureSettings">Structure containing the settings used for this capture</param>
             <param name="filePath">When captureType is of type Video or Image (but not ImageRaw), filePath must be a valid target path for the output capture</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericInvalidOperation if failed to capture image due to on-going video recording.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed to start capture or recording due to null pointer.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed to start capture or recording due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.Timeout if failed to start capture or recording due to timeout.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to start video recording due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.GetIntrinsicCalibrationParameters(UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters@)">
             <summary>
             Get camera intrinsic parameter.
             Requires ComputerVision privilege.
             </summary>
             <param name="outParameters">Output structure containing intrinsic parameters on success.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if unable to retrieve intrinsic parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.GetFramePose(System.UInt64,UnityEngine.Matrix4x4@)">
             <summary>
             Get transform between world origin and the camera. This method relies on a camera timestamp
             that is normally acquired from the MLCameraResultExtras structure, therefore this method is
             best used within a capture callback to maintain as much accuracy as possible.
             Requires ComputerVision privilege.
             </summary>
             <param name="vcamTimestamp">Time in nanoseconds to request the transfom.</param>
             <param name="outTransform">Output transformation matrix on success.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.InvalidParam if outTransform parameter was not valid (null).
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to obtain transform due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.GetErrorCode">
            <summary>
            Returns the most recent error code.
            </summary>
            <returns>Most recent MLCameraError.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceAvailableCallback(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceUnavailableCallback(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceOpenedCallback(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceClosedCallback(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceDisconnectedCallback(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceErrorCallback(UnityEngine.XR.MagicLeap.MLCameraError,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureStartedCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureFailedCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureBufferLostCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureProgressedCallback(System.UInt64,UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompletedCallback(System.UInt64,UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnImageBufferAvailableCallback(UnityEngine.XR.MagicLeap.MLCameraOutput@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnVideoBufferAvailableCallback(UnityEngine.XR.MagicLeap.MLCameraOutput@,UnityEngine.XR.MagicLeap.MLCameraResultExtras@,UnityEngine.XR.MagicLeap.MLCameraFrameMetadata@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartPreview(UnityEngine.Texture2D)">
             <summary>
             Begin previewing the camera image for a live feed. StopPreview() must be called when finished
             Camera must be connected first with Connect()
             </summary>
             <param name="texture">Texture reference that the live footage should be drawn on</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if the texture passed in is invalid (null)
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if some other failure occured.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartPreview">
            <summary>
            Begin previewing the camera image for a live feed. StopPreview() must be called when finished
            Camera must be connected first with Connect()
            </summary>
            <returns>The texture that the live footage will be drawn on. null is returned if any errors occured</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.ApplicationPause(System.Boolean)">
             <summary>
             Handles correctly pausing and resuming the MLCamera API. This is includes, stop/resume capture,
             stop/resume preview, camera
             </summary>
             <param name="texture">Texture reference that the live footage should be drawn on</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if the texture passed in is invalid (null)
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if some other failure occured.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StopPreview">
             <summary>
             Stop previewing the live camera feed.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if you are calling stop without having already started previewing.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings">
            <summary>
            Settings that are specific to a submitted capture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionTransform">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionGains">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAETargetFPSRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ScalerCropRegion">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionAberrationMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAEAntibandingMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.AEExposureCompensation">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAELock">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAEMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAWBLock">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAWBMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.SensorExposureTime">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.SensorSensitivity">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraResultSettings">
            <summary>
            Settings that are specific to a result of a capture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionTransform">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionAberrationMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionGains">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEAntibandingMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.AEExposureCompensation">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAELock">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEMode">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAETargetFPSRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEState">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAWBLock">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAWBState">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorExposureTime">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorSensitivity">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorTimestamp">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ScalerCropRegion">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorFrameDuration">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings">
            <summary>
            Camera characteristics and settings
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues.Minimum">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues.Maximum">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Left">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Top">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Right">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Bottom">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues.Minimum">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues.Maximum">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues.Minimum">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues.Maximum">
            <summary>
            Only the Maximum exposure time range can be modified.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize.Width">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize.Height">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.AvailableFormats">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.AvailableStreamConfigurations">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.Width">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.Height">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAEModesAvailable">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ColorCorrectionAberrationModesAvailable">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAWBModesAvailable">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSizes">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerAvailableStreamConfigurations">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySize">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivityRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStepNumerator">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStepDenominator">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStep">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AvailableMaxDigitalZoom">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAELockAvailable">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAWBLockAvailable">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorOrientation">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraSettings.Apply">
             <summary>
             Apply any changes made to the MLCameraSettings properties.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.MediaGenericUnexpectedNull if failed to connect to camera characteristic due to null pointer.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections">
            <summary>
            MLConnections class is the entry point for the Connections API
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._requestHandle">
            <summary>
            The internal handle attached to this instance of MLConnections invite request.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._registerHandle">
            <summary>
            The internal handle attached to this instance of MLConnections invite receiving registration.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._eventQueueLockObject">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._queuedActions">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._dispatchQueue">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.QueueCallback(System.Action)">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._sendInviteHasStarted">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._activeInvite">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnections._activeRequest">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.CreateInstance">
            <summary>
            static instance of the MLConnections class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.Start">
             <summary>
             Start the MLConnections API. This will register and set callbacks for receiving an invite. Once this is called,
             the user can receive invites after closing the application.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (no device, dll not found, no API symbols).
            
             MLResult.Code will be MLResultCode.AllocFailed if the registration resource allocation failed.
            
             MLResult.Code will be MLResultCode.InvalidParam if a given argument is invalid.
            
             MLResult.Code will be MLResultCode.ConnectionsAlreadyRegistered if there is a duplicate registration.
            
             MLResult.Code will be MLResultCode.ConnectionsNetworkFailure if communication to the network failed.
            
             MLResult.Code will be MLResultCode.ConnectionsSystemFailure if there was a system failure.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.#ctor">
            <summary>
            Initialize private containers
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections.RegistrationCompleteDelegate">
            <summary>
            Callback which is fired when registration is complete.
            </summary>
            <param name="result">This is the result of the Registration. It will be MLResultCode.Ok in case of success, and an error otherwise.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLConnections.OnRegistrationComplete">
            <summary>
            This is the callback that will be called when Registration has completed, either successfully or not. Expect it to only be called once.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections.InvitationDelegate">
            <summary>
            Callback which is fired every time an invitation comes in.
            </summary>
            <param name="userConfirmation">This is a boolean value that informs you whether the user has confirmed the invite notification.</param>
            <param name="payload">This is the data sent from the inviting application on another device.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLConnections.OnInvitation">
            <summary>
            This is the callback that will be called every time an invitation comes in. If userConfirmation is true, this means the user was shown a
            notification and accepted the invitation to launch the application. If false, the applcation was running already when the request was received
            and the application is in charge of gaining user concent.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections.RequestStatusDelegate">
            <summary>
            Callback which is fired when a request sent is completed.
            </summary>
            <param name="completedStatus">Contains the status of the sending process once it has been completed.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLConnections.OnRequestComplete">
            <summary>
            This is the callback that will be called once SendInvite() completes. The possible completedStatus are: Dispatched, DispatchFailed, Cancelled, or InvalidHandle.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections.OnRegistrationCompleteCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnections.OnInvitationCallbackPrivate">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.StartAPI">
            <summary>
            Called by MLAPISingleton to start the API
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.CleanupAPI(System.Boolean)">
            <summary>
            Called by MLAPISingleton on destruction
            </summary>
            <param name="isSafeToAccessManagedObjects"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.Update(System.Single)">
            <summary>
            Called every device frame
            </summary>
            <param name="timeDelta"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.SendInvite(System.UInt32,UnityEngine.XR.MagicLeap.MLConnectionsInviteeFilter,System.String,System.String)">
             <summary>
             Submit a request to start the invite sending process. Request an invite to be sent for other connections to join a multi-user
             experience. This call will trigger a connections invite dialog requesting the user to select up to the specified number of online
             users to be invited. The system will then initiate a push notification to other online devices, start a copy of the application
             requesting the invite and deliver the given payload.
            
             Only one invite can be processed at a time. Will return an error if the first invite request is incomplete/pending in the service
             when a second request is sent.
            
             Will receive a DispatchFailed status if the invitee is not registered to receive invites for the specific application. If multiple invitees
             are selected, SendInvite will dispatch successfully if at least one of them is registered to receive invites for the specific application.
            
             Note: You cannot invite users who are not following the Sender.
             </summary>
             <param name="inviteeCount">Max number of connections to be invited. Min limit is 1.</param>
             <param name="filterLevel">Type of filter applied by default to ML connections list in invitee selection dialog.</param>
             <param name="textPrompt">Text prompt to be displayed to the user with invitee selection dialog.</param>
             <param name="payload">Payload message to be delivered to remote copy of the application with invite.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok If successfully submitted to at least one follower.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied Indicates permissions haven't been granted to make this API call.
            
             MLResult.Code will be MLResultCode.Timeout Indicates the request to request sending an invite timed out.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (no device, dll not found, no API symbols).
            
             MLResult.Code will be MLResultCode.ConnectionsIllegalState Indicates an issue with the connections system, e.g. service is not available for any reason.
            
             MLResult.Code will be MLResultCode.ConnectionsInvalidInviteeCount Indicates number of invitees is invalid.
            
             MLResult.Code will be MLResultCode.InvalidParam Indicates the given arguments are invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.CancelSentInvite">
             <summary>
             Attempts to cancel a previously requested invite sending process. If invite dialog has not yet been completed by the user, this request will
             dismiss the dialog and cancel the invite sending process. Otherwise this operation will return an error.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok If invite was successfully cancelled.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure Indicates an unexpected failure.
            
             MLResult.Code will be MLResultCode.ConnectionsInvalidHandle If connections handle is invalid.
            
             MLResult.Code will be MLResultCode.ConnectionsCancellationPending Indicates invite request has been found and the system is attempting to cancel the process.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied Indicates permissions haven't been granted to make this API call.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an string.
            </summary>
            <param name="resultCode">The MLResult that should be converted.</param>
            <returns>String containing a readable version of the result code.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLConnections.CheckRequestStatus">
            <summary>
            MLConnections API users are responsible for calling MLConnectionsReleaseRequestResources to free any resources associated with a
            request handle once it is no longer needed.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsOperationStatus">
            <summary>
            Defines possible status values for an operation performed on a MLContactsContact.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationStatus.Success">
            <summary>
            Operatin succeeded.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationStatus.Fail">
            <summary>
            Operation failed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationStatus.Duplicate">
            <summary>
            MLContactsContact with the details specified for an insert already exists.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationStatus.NotFound">
            <summary>
            MLContactsContact to be deleted/updated does not exist.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsSearchField">
            <summary>
            Selection bitfield for choosing which fields a search should be executed in
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSearchField.Name">
            <summary>
            Search for name
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSearchField.Phone">
            <summary>
            Search for phone number
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSearchField.Email">
            <summary>
            Search for email address
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSearchField.All">
            <summary>
            Search all fields
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsSelectionField">
            <summary>
            Selection bitfield for choosing which fields a search should be executed in
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSelectionField.Name">
            <summary>
            Search for name
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSelectionField.Phone">
            <summary>
            Search for phone number
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSelectionField.Email">
            <summary>
            Search for email address
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsSelectionField.All">
            <summary>
            Search all fields
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute">
            <summary>
            Stores a tagged value, such as phone number or email address.
            Optional tag indicates what type of value is stored, e.g. "home", "work", etc.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute.#ctor(UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute)">
            <summary>
            Copy Constructor
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute.Tag">
            <summary>
            Name of the tag
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsTaggedAttribute.Value">
            <summary>
            Value of the attribute
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList">
            <summary>
            Stores a list of MLContactsTaggedAttributes
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList.#ctor(UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList)">
            <summary>
            Copy Constructor
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList.Count">
            <summary>
            Number of tagged attributes in the list
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsTaggedAttributeList.Items">
            <summary>
            List of tagged attributes
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsContact">
            <summary>
            Representation of available information for a single contact in address book.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsContact.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsContact.#ctor(UnityEngine.XR.MagicLeap.MLContactsContact)">
            <summary>
            Copy Constructor
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContactsContact.ID">
            <summary>
            Locally-unique contact identifier generated by the system. May change across reboots.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsContact.Name">
            <summary>
            Contact's name
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsContact.PhoneNumberList">
            <summary>
            List of tagged phone numbers. Tag-value pairs are not required to be unique. Tags are
            optional(empty strings allowed).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsContact.EmailAddressList">
            <summary>
            List of tagged email addresses. Tag-value pairs are not required to be unique. Tags are
            optional(empty strings allowed).
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsOperationResult">
            <summary>
            Stores the result of an operation performed on a MLContactsContact.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationResult.Status">
            <summary>
            The status of the operation
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsOperationResult.Contact">
            <summary>
            Resultant contact with updated fields, for e.g., the 'id' of the contact would be available
            in this resultant contact for AddContact
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsListResult">
            <summary>
            Stores the result of a list operation
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListResult.Status">
            <summary>
            The status of the operation
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListResult.List">
            <summary>
            The list of contacts
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListResult.Offset">
            <summary>
            Offset used for the next list to continue after this one
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListResult.TotalHits">
            <summary>
            Total number of contacts found for this request
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsContactList">
            <summary>
            Used to store a list of contacts
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContactsContactList.Count">
            <summary>
            Number of contacts in the list
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsContactList.Contacts">
            <summary>
            The list of contacts
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContacts">
            <summary>
            MLContacts provides address book style functionality for storing, editing, deleting and retrieving contacts from on device storage.
            This API does not expose access to user's connections with other magic leap users (e.g.social graph).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContacts.DEFAULT_FETCH_LIMIT">
            <summary>
            Default limit for retrieval based operations in number of contacts
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContacts.OperationResultDelegate">
            <summary>
            Delegate for API operation results.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLContacts.OnContactAdded">
            <summary>
            Raised when a contact has been successfully added by AddContact.
            MLContactsOperationResult contains details about the operation and the added contact with an updated ID
            ulong is a unique identification handle for this operation
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLContacts.OnContactUpdated">
            <summary>
            Raised when a contact has been successfully updated by UpdateContact.
            MLContactsOperationResult contains details about the operation and the updated contact
            ulong contains a helpful unique identification handle for this operation
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLContacts.OnContactDeleted">
            <summary>
            Raised when a contact has been successfully deleted by DeleteContact.
            MLContactsOperationResult contains details about the operation and the deleted contact.
            ulong is a unique identification handle for this operation
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLContacts.OnOperationFailed">
            <summary>
            Raised when an operation (Add, Update, Delete) failed.
            MLContactsOperationResult contains details about the operation and the referenced contact with an updated ID
            ulong is a unique identification handle for this operation
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.CreateInstance">
            <summary>
            static instance of the MLContacts class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.Start">
             <summary>
             Starts the Contacts API
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if connected to MLContacts successfully.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the operation failed with an unspecified error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.StartAPI">
            <summary>
            Start Contacts API and set up callbacks.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.AddContact(UnityEngine.XR.MagicLeap.MLContactsContact,System.UInt64@)">
             <summary>
             Add a new contact to the address book.
             Contact must contain a name, at least one email address or one phone number, and
             it must not be a duplicate or the operation will fail.
             Contact ID is assigned upon successful completion, any ID specified in the input will be ignored
             OnContactAdded will be raised if the operation completes successfully
             OnOperationFailed will be raised if the operation fails to complete
             </summary>
             <param name="newContact">The contact to add</param>
             <param name="requestHandle">Unique identification handle for this operation that can be used as a reference</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.UpdateContact(UnityEngine.XR.MagicLeap.MLContactsContact,System.UInt64@)">
             <summary>
             Update an existing contact in the address book.
             Contacts are matched by ID and updatedContact must contain a valid ID.
             Contact must contain a name and at least one email address or one phone number.
             OnContactUpdated will be raised if the operation completes successfully
             OnOperationFailed will be raised if the operation fails to complete
             </summary>
             <param name="updatedContact">The contact to update, with the updated information</param>
             <param name="requestHandle">Unique identification handle for this operation that can be used as a reference</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.DeleteContact(UnityEngine.XR.MagicLeap.MLContactsContact,System.UInt64@)">
             <summary>
             Delete an existing contact in the address book.
             Contacts are matched by ID and removedContact must contain a valid ID.
             OnContactDeleted will be raised if the operation completes successfully
             OnOperationFailed will be raised if the operation fails to complete
             </summary>
             <param name="removedContact">The contact to delete</param>
             <param name="requestHandle">Unique identification handle for this operation that can be used as a reference</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.ValidateContact(UnityEngine.XR.MagicLeap.MLContactsContact)">
             <summary>
             Check if a contact is valid before submitting it to AddContact or UpdateContact.
             </summary>
             <param name="checkContact">The contact to check</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if valid.
            
             MLResult.Code will be MLResultCode.InvalidParam if any of the parameters are invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.CreateListPage(System.UInt32,UnityEngine.XR.MagicLeap.MLResult@,System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage},System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage,UnityEngine.XR.MagicLeap.MLResult})">
             <summary>
             Create a new page. Contacts are obtained asynchronously and pageReady will be raised when available.
             </summary>
             <param name="pageLength">How many contacts should be in each page. Max: 2500</param>
             <param name="outResult">out parameter that will contain the MLResult for the request.
             MLResult.Code will be MLResultCode.Ok if sucessfully created
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the API has not been started.</param>
             <param name="pageReady">Raised when the page is collated and ready for viewing.</param>
             <param name="pageFailed">Raised when the page failed to be retreived.</param>
             <returns>The created page for searching, null if unable to create the page.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.CreateSearchPage(System.String,UnityEngine.XR.MagicLeap.MLContactsSearchField,System.UInt32,UnityEngine.XR.MagicLeap.MLResult@,System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage},System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage,UnityEngine.XR.MagicLeap.MLResult})">
             <summary>
             Create a new search page. Contacts are obtained asynchronously and pageReady will be raised when available.
             </summary>
             <param name="searchQuery">The string to search for. Max Length: 100</param>
             <param name="searchFields">Which field(s) should be searched</param>
             <param name="pageLength">How many contacts should be in each page. MAX: 2500</param>
             <param name="pageReady">Raised when the page is collated and ready for viewing.</param>
             <param name="outResult">out parameter that will contain the MLResult for the request.
             MLResult.Code will be MLResultCode.Ok if sucessfully created
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the API has not been started.</param>
             <param name="pageFailed">Raised when the page failed to be retreived.</param>
             <returns>The created page for searching, null if unable to create the page.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.CreateSelectionPage(UnityEngine.XR.MagicLeap.MLContactsSelectionField,System.UInt32,UnityEngine.XR.MagicLeap.MLResult@,System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage},System.Action{UnityEngine.XR.MagicLeap.MLContactsListPage,UnityEngine.XR.MagicLeap.MLResult})">
             <summary>
             Create a new selection page. Contacts are obtained asynchronously and pageReady will be raised when available.
             </summary>
             <param name="selectionFields">Which field(s) should be selected</param>
             <param name="pageLength">How many contacts should be in each page. MAX: 2500</param>
             <param name="outResult">out parameter that will contain the MLResult for the request.
             MLResult.Code will be MLResultCode.Ok if sucessfully created
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the API has not been started.</param>
             <param name="pageReady">Raised when the page is collated and ready for viewing.</param>
             <param name="pageFailed">Raised when the page failed to be retreived.</param>
             <returns>The created page for searching, null if unable to create the page.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContacts.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsListPage">
            <summary>
            Helper to step through and manage pages in the MLContacts address book.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsListPage.PageStatus">
            <summary>
            Status of a page request.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage.PageStatus.Pending">
            <summary>
            The page request is still pending.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage.PageStatus.Ready">
            <summary>
            The page request has succeeded and is ready for viewing.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage.PageStatus.Failed">
            <summary>
            The page request failed to complete.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage.PageStatus.LastPage">
            <summary>
            This is the last page available given the initial parameters. NextPage will return to the beginning
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage.Status">
            <summary>
            Current status of this request.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContactsListPage.ContactsList">
            <summary>
            The list of contacts in this page... will be null if the page is not ready for viewing
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContactsListPage.TotalHits">
            <summary>
            The total number of contacts that will be available by paging through with the given parameters
            e.g. If there are 8 total hits with Page length 3, you will be able to call next page 3 times
            (3 results), (3 results), (2 results), before looping back to the beginning
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage._requestHandle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContactsListPage._unregisterUpdate">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsListPage.Finalize">
            <summary>
            Destroy the page request
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsListPage.InternalNewPage(System.UInt32,System.String)">
             <summary>
             Request a new page
             </summary>
             <param name="pageLength">The length of the page</param>
             <param name="offset">Offset into the page</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsListPage.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsListPage.NextPage">
             <summary>
             Get the next page in the address book, given the initial length.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsSearchPage">
            <summary>
            Helper to step through and manage pages of a search in the MLContacts address book.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsSearchPage.InternalNewPage(System.UInt32,System.String)">
             <summary>
             Request a new page
             </summary>
             <param name="pageLength">The length of the page</param>
             <param name="offset">Offset into the page</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContactsSelectionPage">
            <summary>
            Helper to step through and manage pages of a selection in the MLContacts address book.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContactsSelectionPage.InternalNewPage(System.UInt32,System.String)">
             <summary>
             Request a new page
             </summary>
             <param name="pageLength">The length of the page</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if sucessfully submitted
            
             MLResult.Code will be MLResultCode.InvalidParam if either of the parameters are invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLDispatcher">
            <summary>
            This interface is to let an application query the platform to handle things
            that the app itself cannot or wants someone else to handle.
            For example, if an application comes across a schema tag that it doesn't know
            what to do with, it can query the patform to see if some other application might.
            This can be useful for handling http://, https:// or other customSchema://&lt;arg1&gt;/&lt;arg2&gt;
            Apart from handling schema tags in URIs, this interface can also be used
            to query the platform to handle a type of file based on file-extension or mime-type
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLDispatcher.TryOpenAppropriateApplication(System.String)">
            <summary>
            Try to open the application that is registered to support the given URI.
            </summary>
            <param name="uri"> The URI to pass into the dispatch service.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.Dispatch* if a dispatch specific error occurred.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLDispatcher.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEye">
            <summary>
            Class used to respresent a single eye.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEye.EyeType">
            <summary>
            Enumeration to specify which eye.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye.EyeType.Left">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye.EyeType.Right">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.Type">
            <summary>
            Return this class' eye type.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.Center">
            <summary>
            Return eye center.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.IsBlinking">
            <summary>
            Return true if eye is inside a blink.
            Set to false before initial update.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.CenterConfidence">
            <summary>
            Return confidence value for eye center. Will be 0 if
            no eye detected - when not wearing the device or closed eye.
            Initial value is set to 0 before the first update.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEye.#ctor(UnityEngine.XR.MagicLeap.MLEye.EyeType)">
            <summary>
            Constructor to initialize this class based on the desired eye type.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEyes">
            <summary>
            MLEyes class contains all Eye tracking data for both left and right eyes.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.LeftEye">
            <summary>
            Left eye class used to get left eye specific data.
            </summary>
            <returns> Returns reference to left eye. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.RightEye">
            <summary>
            Right eye class used to get right eye specific data.
            </summary>
            <returns> Returns reference to right eye. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.FixationConfidence">
            <summary>
            A quality metric to indicate how accurate the gaze will be..
            </summary>
            <returns> Returns confidence value to indicate accuracy of fixation point. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.CalibrationStatus">
            <summary>
            What the status of eye calibration is.
            </summary>
            <returns> Returns the status of eye calibration. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.FixationPoint">
            <summary>
            Fixation point.
            </summary>
            <returns> Returns fixtion point of users eyes. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.Start">
             <summary>
             Starts the Eyes API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.StartAPI">
            <summary>
            Starts the eye object requests, Must be called to start receiving eye tracker data from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.Update(System.Single)">
            <summary>
            Update all eye data.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandMeshBlock">
            <summary>
            Structure to represent a mesh block
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHandMeshBlock.Vertex">
            <summary>
            Array of vertex positions relative to the origin.
            This can be directly plugged into Mesh.vertices.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHandMeshBlock.Index">
            <summary>
            Array of Indices. Guaranteed to be a multiple of 3. Every 3 indices creates a triangles.
            This can be directly plugged into Mesh.triangles.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandMesh">
            <summary>
            Structure to represent a hand mesh.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHandMesh.MeshBlock">
            <summary>
            Array of mesh blocks.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandMeshing">
            <summary>
            The MLHandMeshing API is used to request for the mesh information of the hands.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandMeshing.HandMeshRequestCallback">
            <summary>
            Hand Mesh Request Callback delegate.
            </summary>
            <param name="result">Result of request.</param>
            <param name="meshData">Mesh Data of the request if result is ok. Otherwise, meshData.MeshBlock is null.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.CreateInstance">
            <summary>
            Create static instance of MLHandMeshing class.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.Start">
             <summary>
             Starts the MLHandMeshing API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.StartAPI">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory. Frees up resources of pending queries.
            </summary>
            <param name="isSafeToAccessManagedObjects">Allow complete cleanup of the API.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.RequestHandMesh(UnityEngine.XR.MagicLeap.MLHandMeshing.HandMeshRequestCallback)">
             <summary>
             Requests for the hand mesh and executes the callback when the request is done.
             </summary>
             <param name="callback">Callback to execute when the request is done.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHandMeshing.Update(System.Single)">
            <summary>
            Process pending and completed queries.
            </summary>
            <param name="timeElapsed">Time elapsed since last frame's update.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityAttribute">
            <summary>
            MLIdentityAttribute represents an attribute of a user's profile
            (for instance: name, address, email). Each attribute has a name (represented by key and value).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Key">
            <summary>
            The enum value.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Name">
            <summary>
            Attribute Name.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Value">
            <summary>
            Attribute's string value. Call GetValueAs* functions to get
            the value of the attribute as other types (eg. int, float etc )
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.IsRequested">
            <summary>
            The Attribute is requested.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.IsGranted">
            <summary>
            The Attribute is granted.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile">
            <summary>
            Internal raw representation of C API's MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile.AttributeCount">
            <summary>
            attributeCount is the number of MLIdentityAttribute structures pointed
            to by attributePtrs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile.AttributePtrs">
            <summary>
            attributePtrs is an array of MLIdentityAttributes containing user profile
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityProfile">
            <summary>
            Public represenation of MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLIdentityProfile.IsValid">
            <summary>
            Public property to check if internal pointer and hence this profile is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLIdentityProfile.Attributes">
            <summary>
            Array of MLIdentityAttributes containing user profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile.RequestAttributes">
            <summary>
            Optionally specific attributes to request for this profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._profilePtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the Identity API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._profile">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the Identity API.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._request">
            <summary>
            Request class used to keep track of pending requests for identity data.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityProfile.Fetch(System.Action{UnityEngine.XR.MagicLeap.MLResult})">
            <summary>
            Fetch the specified attributes and callback when result is known.
            </summary>
            <param name="callback">
            MLResult.Code in callback will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if caller does not have the IdentityRead privilege.
            MLResult.Code will be MLResultCode.Identity* if an identity specific failure occurred during the operation.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Pending if successful (request will be pending).
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if caller does not have the IdentityRead privilege.
            MLResult.Code will be MLResultCode.Identity* if an identity specific failure occurred during the operation.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityProfile.Cleanup">
            ReleaseUserProfile releases all resources associated with the
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus">
             <summary>
             Identifies the status of an image target.
            
             Each MLImageTargetResult will include a ImageTrackerTargetStatus
             giving the current status of the target.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.Tracked">
            <summary>
            Image target is tracked.
            The image tracker system will provide a 6 DOF pose when queried using
            MLSnapshotGetTransform function.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.Unreliable">
            <summary>
            Image target is tracked with low confidence.
            The image tracker system will still provide a 6 DOF pose. But this
            pose might be inaccurate and might have jitter. When the tracking is
            unreliable one of the following two events will happen quickly : Either the
            tracking will recover to MLImageTrackerTargetStatus_Tracked or tracking
            will be lost and the status will change to
            MLImageTrackerTargetStatus_NotTracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.NotTracked">
            <summary>
            Image target is lost.
            The image tracker system will not report any pose for this target. Querying
            for the pose using MLSnapshotGetTransform will return false.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTargetResult">
            <summary>
            Represents the image target result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Position">
            <summary>
            Position of the target.
            This is not valid if the target is not being tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Rotation">
            <summary>
            Orientation of the target.
            This is not valid if the target is not being tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Status">
            <summary>
            Status of the target.
            Every target will have an associated status indicating the current
            tracking status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTarget">
            <summary>
            Manages the image target settings.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget._targetHandle">
            <summary>
            The internal ML_HANDLE used to reference this image target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget._trackerHandle">
            <summary>
            The internal ML_HANDLE used to reference the tracker for this target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget.TargetSettings">
            <summary>
            Reference to the image target's settings.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLImageTarget.IsValid">
            <summary>
            Check the validity of the image target.
            </summary>
            <returns> true if the target is valid, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.#ctor(System.String,UnityEngine.Texture2D,System.Single,System.Action{UnityEngine.XR.MagicLeap.MLImageTarget,UnityEngine.XR.MagicLeap.MLImageTargetResult},System.UInt64,System.Boolean)">
            <summary>
            Constructs the MLImageTarget object with specified parameters.
            <param name="name"> Image target's name. </param>
            <param name="image">
            Texture2D representing the image target.
            The size of the texture should not be changed. Set the "Non Power of 2" property of Texture2D to none.
            </param>
            <param name="longerDimension"> Longer dimension of the image target in scene units. Default is meters. </param>
            <param name="callback"> Tracking result callback for this image target. </param>
            <param name="trackerHandle"> Handle for the image tracker. </param>
            <param name="isStationary">
            Set this to true if the position of this image target in the physical world is fixed and its surroundings
            are planar (ex: walls, floors, tables, etc).
            </param>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Cleanup">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.UpdateTrackingData">
            <summary>
            Updates this image target's tracking data, status, and transforms.
            Callback (if any) is called with the updated result.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.GetTargetLongerDimension">
            <summary>
            Get the longer dimension of the image target.
            </summary>
            <returns> longer dimension in scene units.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.SetTargetLongerDimension(System.Single)">
             <summary>
             Set the longer dimension of the image target.
             </summary>
             <param name="longerDimension"> Longer dimension in scene units. Default is meters.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTracker">
            <summary>
            MLImageTracker manages the Image Tracker system.
            Image Tracker enables experiences that recognize 2D planar images
            (image targets) in the physical world. It provides the position and
            orientation of the image targets in the physical world.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._handle">
            <summary>
            The internal ML_HANDLE used to reference this tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._targetList">
            <summary>
            The list of targets currently being tracked by this image tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._trackerSettings">
            <summary>
            The list of settings for this image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.CreateInstance">
            <summary>
            Static instance of the MLImageTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Start">
             <summary>
             Start the image tracker with the defined settings.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if image tracker was not created due to lack of privilege(s).
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Start(UnityEngine.XR.MagicLeap.MLImageTrackerSettings)">
             <summary>
             Start the image tracker with the specified settings.
             </summary>
             <param name="customSettings">The settings to start the image tracker with.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if image tracker was not created due to lack of privilege(s).
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.#ctor">
            <summary>
            Initialize the target list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.StartAPI">
            <summary>
            Initialize the image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.CleanupAPI(System.Boolean)">
            <summary>
            Cleanup the image targets first (if it safe) and the cleanup the
            image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Update(System.Single)">
            <summary>
            Handle the update callback.
            Update the tracking results for all the image targets.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.OnApplicationPause(System.Boolean)">
            <summary>
            Handle the application pause callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.AddTarget(System.String,UnityEngine.Texture2D,System.Single,System.Action{UnityEngine.XR.MagicLeap.MLImageTarget,UnityEngine.XR.MagicLeap.MLImageTargetResult},System.Boolean)">
            <summary>
            Adds an image target to the image tracker system.
            </summary>
            <param name="name">The unique name of this target.</param>
            <param name="image">
            Texture2D representing the image target.
            The aspect ration of the target should not be changed. Set the "Non Power of 2" property of Texture2D to none.
            </param>
            <param name="longerDimension">Size of the longer dimension in scene units.</param>
            <param name="callback">The function that will be triggered with target info.</param>
            <param name="isStationary">
            Set this to true if the position of this image target in the physical world is fixed and the local
            geometry is planar.
            </param>
            <returns>MLImageTarget if the target was created and added successfully, null otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.RemoveTarget(System.String)">
            <summary>
            Removes a target whose name matches the passed in name.
            </summary>
            <param name="name">The name of the target to remove.</param>
            <returns>True if the target was found and removed, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.GetCurrentTrackerSettings">
            <summary>
            Get the current MLImageTrackerSettings
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.UpdateTrackerSettings(UnityEngine.XR.MagicLeap.MLImageTrackerSettings)">
             <summary>
             Set MLImageTrackerSettings
             </summary>
             <param name="customSettings">The new MLImageTrackerSettings wanted.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successfully updated the image tracker settings.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed to update the settings due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if failed to update the settings due to lack of privilege(s).
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.GetTrackerStatus">
            <summary>
            Get the enabled status of the Image Tracker
            </summary>
            <returns>True if currently enabled, false if disabled.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Enable">
             <summary>
             Enable the Image Tracker
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Disable">
             <summary>
             Disable the Image Tracker
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputConfiguration">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_CFUID_TRACKING_ENABLED">
            <summary>
            The default value for CFUID tracking if not specified.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_TRIGGER_DOWN_THRESHOLD">
            <summary>
            The default trigger reading threshold for emitting OnTriggerDown.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_TRIGGER_UP_THRESHOLD">
            <summary>
            The default trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.Dof">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.TriggerDownThreshold">
            <summary>
            The trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.TriggerUpThreshold">
            <summary>
            The trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.EnableCFUIDTracking">
            <summary>
            Controls if CFUID (Coordinate Frame Unique ID) based tracking should be initialized or not.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputConfiguration.#ctor(System.Boolean,System.Single,System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputConfiguration.#ctor(System.Single,System.Single,System.Boolean)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputConfiguration.op_Explicit(UnityEngine.XR.MagicLeap.MLInputConfiguration)~MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTabletState">
            <summary>
            A structure containing information about the state of the tablet device.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.Type">
            <summary>
            Type of this tablet device.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.ToolType">
            <summary>
            Type of tool used with the tablet.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.PenTouchPosAndForce">
            <summary>
            Current touch position (x,y) and force (z).
            Position is in the [-1.0,1.0] range and force is in the [0.0,1.0] range.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.AdditionalPenTouchData">
             <summary>
             Additional coordinate values (x, y, z)
             It could contain data specific to the device type.
            
             AdditionalPenTouchData for Wacom holds pen tilt data (x, y), in degrees from -64 to 64. Straight up an down is 0.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.IsPenTouchActive">
            <summary>
            Is touch active.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.IsConnected">
            <summary>
            If this tablet is connected.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.PenDistance">
            <summary>
            Distance between pen and tablet.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.TimeStamp">
            <summary>
            Time stamp of the event.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTabletState.ValidityCheck">
            <summary>
            Used to determine what data in this structure is valid.
            Example: Before using AdditionalPenTouchData check if that variable is valid in the ValidityCheck.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTabletState.ToString">
            <summary>
            Override the ToString. Does not print the ValidityCheck.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput">
            <summary>
            Stores the current input information and sends input events.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._isInEditor">
            <summary>
            Cached value of are we in the Editor for later use on shutdown
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._inputHandle">
            <summary>
            The internal handle attached to this instance of MLInput
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._controllers">
            <summary>
            The two controller objects currently being tracked.
            [0] = Left
            [1] = Right
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._triggerPressed">
            <summary>
            The current pressed state of the controller triggers.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._config">
            <summary>
            The input configuration to send to MLInputCreate
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._controllerConfig">
            <summary>
            The configuration for the controllers.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._cachedDevices">
            <summary>
            Stored a cached list of the device controllers.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._queuedActions">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.QueueCallback(System.Action)">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput.UNOFFICIAL_SUPPORTED_TABLETS">
            <summary>
            The unofficial maximum amount of tablets allowed to be conected to the device at once.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.Hand">
            <summary>
            Standardized enumeration of handedness
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput.Hand.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput.Hand.Right">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInput.TabletDevices">
            <summary>
            List of currently connected Tablet Devices. Will be empty if no Tablets are connected.
            Currently Unity is officially supporting one tablet connected, this setup will support
            more in the future when an official Maximum Supported Tablets is set.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CreateInstance(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            static instance of the MLInput class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.Start(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
             <summary>
             Starts the Input API.
             </summary>
             <param name="config">The configuration applied to input upon initialization.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.ControllerTouchpadGestureDelegate">
            <summary>
            Callback which is fired whenever the state of a button changes.
            </summary>
            <param name="controllerId">The zero-based index of the controller.</param>
            <param name="touchpadGesture">The touchpad gesture attached to this event.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureStart">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture begins.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureContinue">
            <summary>
            This callback will be invoked as a detected touchpad gesture continues.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureEnd">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture ends.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.ControllerButtonDelegate">
            <summary>
            Callback which is fired whenever the state of a button changes.
            </summary>
            <param name="controllerId">The zero-based index of the controller.</param>
            <param name="button">The button attached to this event.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerButtonDown">
            <summary>
            This callback will be invoked whenever a button press is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerButtonUp">
            <summary>
            This callback will be invoked whenever a button release is detected.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.ControllerConnectionDelegate">
            <summary>
            Callback which is fired whenever the state of the controller connection changes.
            </summary>
            <param name="controllerId">The zero-based index of the controller.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerConnected">
            <summary>
            This callback will be invoked when a controller is connected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerDisconnected">
            <summary>
            This callback will be invoked when a controller is disconnected.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.TriggerDelegate">
            <summary>
            Callback which is fired whenever the state of the trigger changes.
            </summary>
            <param name="controllerId">The zero-based index of the controller.</param>
            <param name="triggerValue">The current amount of depression of the trigger from 0 to 1.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTriggerDown">
            <summary>
            This callback will be invoked as the trigger passes the TriggerDownThreshold.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTriggerUp">
            <summary>
            This callback will be invoked as the trigger passes the TriggerUpThreshold.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnPenTouchDelegate">
            <summary>
            Callback which is fired for pen touch events.
            </summary>
            <param name="tabletId">ID of the tablet device.</param>
            <param name="tabletState">State of the tablet device</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletPenTouch">
            <summary>
            This callback will be invoked whenever a pen touch event is detected.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnRingTouchDelegate">
            <summary>
            Callback which is fired for touch ring events.
            </summary>
            <param name="tabletId">ID of the tablet device.</param>
            <param name="touchRingValue">Touch ring value. (0 - 71)</param>
            <param name="timestamp">Time at which this event occured.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletRingTouch">
             <summary>
             This callback will be invoked whenever a touch ring event is detected.
            
             touchRingValue for Wacom has 72 levels and goes from 0 to 71. Values are absolute, not
             relative to start position.
             </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.TabletButtonDelegate">
            <summary>
            Callback which is fired for tablet button events.
            </summary>
            <param name="tabletId">ID of the tablet device.</param>
            <param name="tabletButton">Value of the tablet device button.</param>
            <param name="timestamp">Time at which this event occured.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletButtonDown">
            <summary>
            This callback will be invoked whenever a tablet device button press is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletButtonUp">
            <summary>
            This callback will be invoked whenever a tablet device button release is detected.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.TabletConnectionDelegate">
            <summary>
            Callback which is fired whenever the state of the tablet connection changes.
            </summary>
            <param name="tabletId">ID of the tablet device.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletConnected">
            <summary>
            This callback will be invoked whenever a tablet device is connected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTabletDisconnected">
            <summary>
            This callback will be invoked whenever a tablet device is disconnected. This tabletID is no longer valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInput.TriggerDownThreshold">
            <summary>
            The threshold used to determine when the trigger has been squeezed enough
            to be considered pressed.  The trigger will remain in the pressed state
            until its reading goes below TriggerUpThreshold. TriggerDownThreshold
            must be larger than TriggerUpThreshold.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInput.TriggerUpThreshold">
            <summary>
            The threshold used to determine when the trigger has been released
            enough to be considered released.  The trigger will remain in the
            released state until its reading goes above TriggerDownThreshold.
            TriggerUpThreshold must be smaller than TriggerDownThreshold.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetController(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns> The first MLInputController mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns> MLInputController corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.SetControllerHand(System.Int32,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetControllerIndexFromHand(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Retrieves a controller index mapped to a specific hand
            </summary>
            <returns> Index of controller mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetHandFromControllerIndex(System.Int32)">
            <summary>
            Retrieves the hand mapped to the specified controller index
            </summary>
            <returns> Hand corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.#ctor(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetController(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns> The first MLInputController mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns> MLInputController corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalSetControllerHand(System.Int32,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetControllerIndexFromHand(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Retrieves a controller index mapped to a specific hand
            </summary>
            <returns> Index of the first controller mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetHandFromControllerIndex(System.Int32)">
            <summary>
            Retrieves the hand mapped to the specified controller index
            </summary>
            <returns> The hand mapped to the specified controller. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureStartNative(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureContinueNative(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureEndNative(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletPenTouchNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletRingTouchNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletButtonDownNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletButtonUpNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletConnectNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnTabletDisconnectNativeCallbackPrivate">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.StartAPI">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.SetControllerConfiguration">
            <summary>
            Sets the controller configuration.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.Update(System.Single)">
            <summary/>
        </member>
        <!-- Badly formed XML comment ignored for member "M:UnityEngine.XR.MagicLeap.MLInput.PollState" -->
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.ProcessTriggerReadings">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up this input tracker and unsubscribes from the MagicLeap device's update loop.
            </summary>
            <param name="isSafeToAccessManagedObjects">Whether it is safe for the cleanup routine to access managed objects.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.DestroyNativeTracker">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CleanupStaticEvents">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CleanupNativeCallbacks">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.TabletStateConvert(MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetTabletStates(System.Byte,System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLTabletState}@)">
             <summary>
             List of MLTabletStates since last query up to a max of 20 MLTabletStates
             as specified in the CAPI. Will be empty if device has just been connected and no
             updates have happened yet or if a Tablet Pen is not activly touching or hovering above the touchpad.
             </summary>
             <param name="tabletId">The Id of the tablet you want to get the states for. Can be retrieved from TabletDevices.</param>
             <param name="queueOfStates">Returns the list of MLTabletStates since previous update for specific Tablet Device. Null for invalid tabletID or error on getting states.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successfully fetched the tablet device state.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputController">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnTouchpadGestureStart">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture begins.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnTouchpadGestureContinue">
            <summary>
            This callback will be invoked as a detected touchpad gesture continues.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnTouchpadGestureEnd">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture ends.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnButtonDown">
            <summary>
            This callback will be invoked whenever a button press is detected.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnButtonUp">
            <summary>
            This callback will be invoked whenever a button release is detected.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnConnect">
            <summary>
            This callback will be invoked when a controller is connected.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputController.OnDisconnect">
            <summary>
            This callback will be invoked when a controller is disconnected.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Hand">
            <summary>
            The hand this controller is mapped to.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Connected">
            <summary>
            Is this controller connected to the device?
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Position">
            <summary>
            Gets the current 3DoF position.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Orientation">
            <summary>
            Gets the current 3DoF orientation.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch1PosAndForce">
            <summary>
            Gets the current touch 1 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch1Active">
            <summary>
            Gets whether touch 1 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch2PosAndForce">
            <summary>
            Gets the current touch 2 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch2Active">
            <summary>
            Gets whether touch 2 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TriggerValue">
            <summary>
            Gets current trigger value [0.0-1.0]
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.IsBumperDown">
            <summary>
            Get current status of bumper
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TouchpadGestureState">
            <summary>
            Current touchpad gesture state
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Type">
            <summary>
            Type of this controller
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Dof">
            <summary>
            Current degrees of freedom mode of the controller
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.CalibrationAccuracy">
            <summary>
            The calibration accuracy levels for controller.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TouchpadGesture">
            <summary>
            Current touchpad gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Id">
            <summary>
            Controller ID
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.#ctor(System.UInt64,System.Byte,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.Update(UnityEngine.XR.InputDevice)">
            <summary>
            Updates the control state using the MLController API.
            </summary>
            <param name="device">The current device for the frame.</param>
            <returns>Returns the result from either MLControllerGetState or MLSnapshotGetTransform.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternLED(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
             <summary>
             Start the controller's LED in the specified pattern and set the duration (in seconds)
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternEffectLED(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
             <summary>
             Start the controller's LED performing the specified effect at the specified speed with the specified pattern for the specified duration (in seconds)
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StopFeedbackPatternLED">
             <summary>
             Stop on-going LED patterns for the controller
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternVibe(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
             <summary>
             Vibrate the controller in the specified pattern
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StopFeedbackPatternVibe">
             <summary>
             Stop on-going Vibration patterns for the controller
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture">
            <summary>
            Class that encasulate touchpad gestures data.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.PosAndForce">
            <summary>
            Gesture position (x,y) and force (z). Force is [0-1]
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Type">
            <summary>
            Type of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Direction">
            <summary>
            Direction of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Speed">
            <summary>
            Speed of gesture. Note that this takes on different meanings depending
            on the gesture type being performed. For radial gestures, this will be
            the angular speed around the axis. For pinch gestures, this will be the
            speed at which the distance between fingers is changing.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Distance">
            <summary>
            For radial gestures, this is the absolute value of the angle. For scroll
            and pinch gestures, this is the absolute distance traveled.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.FingerGap">
            <summary>
            Distance between the two fingers performing the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Radius">
            <summary>
            For radial gestures, this is the radius of the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Angle">
            <summary>
            Angle from the center of the touchpad to the finger.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor(UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Update(UnityEngine.XR.MagicLeap.MagicLeapTouchpadGestureEvent)">
            <summary>
            Update with the specified Unity XR Input MagicLeapTouchpadGestureEvent.
            </summary>
            <param name="touchpadGesture">The Unity XR Input MagicLeapTouchpadGestureEvent.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLightingTracker">
            <summary>
            Provides environment lighting information.
            Capturing images or video will stop the lighting information update.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperature">
            <summary>Kelvin color temperature</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperatureAgeSeconds">
            <summary>
            Time at which global temperature data was captured (represented as elapsed seconds
            since DateTime.MinValue).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperatureColor">
            <summary>RGB represenation of the kelvin color temperature.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AmbientCameraLuminance">
            <summary>Array of each camera's luminance in nits.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AmbientCameraLuminanceAgeSeconds">
            <summary>
            Time at which ambient camera luminance data was captured (represented as elapsed seconds
            since DateTime.MinValue).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AverageLuminance">
            <summary>Average luminace in nits of all sensors.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.RawPixelColorAverage">
            <summary>Accumulated R, G and B values over a 250 ms time period by the Ambient Light Sensor.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.TristimulusValues">
            <summary>The CIE Tri-Stimulus values in Q16 format (scaled 2^16.)</summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.#ctor">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CreateInstance">
            <summary>
            Static instance of the MLLightingTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.Start">
             <summary>
             Starts MLLightingTracker.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.StartAPI">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CleanupAPI(System.Boolean)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CalculateGlobalTemperatureColor">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CalculateGlobalAmbientScalar">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.Update(System.Single)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLocalization">
            <summary>
            MLLocalization provides the Language and Country set at the system level.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocalization.GetSystemLanguage(System.String@)">
             <summary>
             Reads the language code of the system locale.
             </summary>
             <param name="language">Language code defined in ISO 639. Valid only if MLResultCode.Ok is returned, empty string otherwise.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the language code was retrieved successfully.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if there was an unspecified error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocalization.GetSystemCountry(System.String@)">
             <summary>
             Reads the country code of the system locale.
             </summary>
             <param name="country">Country code defined in ISO 3166, or an empty string. Valid only if MLResultCode.Ok is returned, empty string otherwise.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the country code was retrieved successfully.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if there was an unspecified error.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLocationData">
            <summary>
            Location request result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.Latitude">
            <summary>
            Location latitude.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.Longitude">
            <summary>
            Location longitude.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.PostalCode">
            <summary>
            Approximate postal code.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.HasPostalCode">
            <summary>
            Used to determine the validity of MLLocationData.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.Timestamp">
            <summary>
            Epoch timestamp in milliseconds of the location data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.Accuracy">
            <summary>
            The radius in meters.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLocationData.HasAccuracy">
            <summary>
            Used to determine the accuracy of MLLocationData.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocationData.Equals(System.Object)">
            <summary>
            Override the Equals Operator.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocationData.GetHashCode">
            <summary>
            Override the GetHashCode Operator.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocationData.op_Equality(UnityEngine.XR.MagicLeap.MLLocationData,UnityEngine.XR.MagicLeap.MLLocationData)">
            <summary>
            Override the == Operator.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocationData.op_Inequality(UnityEngine.XR.MagicLeap.MLLocationData,UnityEngine.XR.MagicLeap.MLLocationData)">
            <summary>
            Override the != Operator.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocationData.ToString">
            <summary>
            Override the ToString.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLocation">
            <summary>
            MLLocation provides device location data including; Latitude, Longitude, and approximate Postal Code.
            Currently location is only recieved on wifi connect. If connection is lost, a new location will be
            provided on connect.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.CreateInstance">
            <summary>
            Static instance of the MLLocation class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.StartAPI">
            <summary>
            Start MLLocation API and set up callbacks.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.CleanupAPI(System.Boolean)">
            <summary>
            Called by MLAPISingleton on destruction
            </summary>
            <param name="isSafeToAccessManagedObjects"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.Update(System.Single)">
            <summary>
            Called every device frame
            </summary>
            <param name="timeDelta"></param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.Start">
             <summary>
             Starts the MLLocation API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.GetLastFineLocation(UnityEngine.XR.MagicLeap.MLLocationData@)">
             <summary>
             Returns the current fine location data on success and returns the last queried fine location data on failure. Latitude and Longitude of
             0 should be assumed an Invalid Location.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if obtained location successfully.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (no device, dll not found, no API symbols).
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.Location... if specific location error.
             </returns>
             <param name="lastLocation">Gets device last known valid fine location. Only updates when getting the location succeeds. Latitude and Longitude of 0 should be assumed an Invalid Location.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.GetLastCoarseLocation(UnityEngine.XR.MagicLeap.MLLocationData@)">
             <summary>
             Returns the current coarse location data on success and returns the last queried coarse location data on failure. Latitude and Longitude of
             0 should be assumed an Invalid Location. New location only received on wifi connect currently.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if obtained location successfully.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (no device, dll not found, no API symbols).
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.Location... if specific location error.
             </returns>
             <param name="lastLocation">Gets device last known valid coarse location. Only updates when getting the location succeeds. Latitude and Longitude of 0 should be assumed an Invalid Location.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLocation.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="resultCode">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovement">
            <summary>
            MLMovement class is the entry point for the Movement API
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.GetDefaultSettings(UnityEngine.XR.MagicLeap.MLMovementSettings@)">
             <summary>
             This populates the provided MLMovementSettings struct with all of the current system
             movement settings.
             </summary>
             <param name="settings">Settings struct to fill out.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameter is invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.Start3Dof(UnityEngine.XR.MagicLeap.MLMovementSettings@,UnityEngine.XR.MagicLeap.MLMovement3DofSettings@,UnityEngine.XR.MagicLeap.MLMovement3DofControls@,UnityEngine.XR.MagicLeap.MLMovementObject@,System.UInt64@)">
             <summary>
             Starts a new 3dof movement session.
            
             A 3DoF movement session relies on the orientation of the user's pointing device, but
             ignores the position, when moving the target object.
             </summary>
             <param name="settings">Settings to use for new movement session.</param>
             <param name="dofSettings">3dof settings for movement sessions.</param>
             <param name="controls">3dof control settings for movement session .</param>
             <param name="obj">Object for the movement session.</param>
             <param name="sessionHandle">Handle to fill in for new movement session.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameter is invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.Start6Dof(UnityEngine.XR.MagicLeap.MLMovementSettings@,UnityEngine.XR.MagicLeap.MLMovement6DofSettings@,UnityEngine.XR.MagicLeap.MLMovement6DofControls@,UnityEngine.XR.MagicLeap.MLMovementObject@,System.UInt64@)">
             <summary>
             Starts a new 6dof movement session.
            
             A 6DoF movement session relies on both the position and orientation of the user's pointing device
             when moving the target object.
             </summary>
             <param name="settings">Settings to use for new movement session.</param>
             <param name="dofSettings">6dof settings for movement session.</param>
             <param name="controls">6dof control settings for movement session.</param>
             <param name="obj">Object for the movement session.</param>
             <param name="sessionHandle">Handle to fill in for new movement session.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameter is invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.ChangeDepth(System.UInt64,System.Single)">
             <summary>
             Change the depth offset of the object from the user's headpose. (when using a 3DoF movement
             session) or from the pointing device (when using a 6DoF movement session).
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="deltaDepth">Depth delta change.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.ChangeRotation(System.UInt64,System.Single)">
             <summary>
             Change the rotation about the up-axis of the object being moved.
            
             This rotation applies to the object in its local space, and not to the rotation relative to
             the user's headpose (when using a 3DoF movement session) or relative to the pointing device
             (when using a 6DoF movement session).
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="deltaRadians">Rotation delta change.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.Update3Dof(System.UInt64,UnityEngine.XR.MagicLeap.MLMovement3DofControls@,System.Single,UnityEngine.XR.MagicLeap.MLMovementObject@)">
             <summary>
             Update 3dof movement with new data.
            
             This function is intended to be called once per frame per active 3Dof movement session.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="controls">New input data.</param>
             <param name="deltaTime">Time since last update.</param>
             <param name="inOutObj">Object to update.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameters were invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.Update6Dof(System.UInt64,UnityEngine.XR.MagicLeap.MLMovement6DofControls@,System.Single,UnityEngine.XR.MagicLeap.MLMovementObject@)">
             <summary>
             Update 6dof movement with new data.
            
             This function is intended to be called once per frame per active 6Dof movement session.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="controls">New input data.</param>
             <param name="deltaTime">Time since last update.</param>
             <param name="inOutObj">Object to update.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameters were invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.End(System.UInt64,System.Single,UnityEngine.XR.MagicLeap.MLMovementObject@)">
             <summary>
             End a movement session (either 3Dof or 6Dof).
            
             This function is intended to be called once per frame per active movement session while it returns
             MLResult_Pending. This will allow the session to resolve any remaining soft collisions.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="deltaTime">Time since last update.</param>
             <param name="obj">Object to fill out with the final data.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.Pending if the movement session is still resolving.
            
             MLResult.Code will be MLResultCode.Timeout if the movement session was unable to resolve and was forcefully ended..
            
             MLResult.Code will be MLResultCode.InvalidParam if input parameters were invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.StartHardCollision(System.UInt64,UnityEngine.Vector3@,System.UInt64@)">
             <summary>
             Start tracking a new hard collision for a movement session.
            
             Call this to inform the movement library that the moving object has collided with something impenetrable.
             The movement library will not allow the moving object to penetrate the other object in the direction
             opposite the contact normal. You can update the contact normal for the returned collision instance handle
             each frame by calling MLMovementUpdateHardCollision. This is useful if the moving object is colliding with a
             curved surface so the contact normal is changing as the moving object slides against the collision surface.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="contactNormal">Normalized Vector3 surface normal of object that movement is colliding with.</param>
             <param name="collisionHandle">Handle for the collision session.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if contactNormal was invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
            
             MLResult.Code will be MLResultCode.MovementInvalidCollisionHandle if collision handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.StartSoftCollision(System.UInt64,UnityEngine.Vector3@,System.Single,System.Single,System.UInt64@)">
             <summary>
             Start tracking a new soft collision for a movement session.
            
             Soft collisions will allow a degree of interpenetration during movement.  Collisions will resolve over time
             giving the colliding objects a softness to them.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="otherPosition">Position of the center of the thing we are soft-colliding with, the source of the repulsion force.</param>
             <param name="closestDistance">The position of the the object being moved will never be closer to other_position than this distance.</param>
             <param name="maxDistance">The moving object will not be affected by this soft collision once its position is this distance from other_position.</param>
             <param name="collisionHandle">Handle for the collision session.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if otherPosition was invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
            
             MLResult.Code will be MLResultCode.MovementInvalidCollisionHandle if collision handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.UpdateHardCollision(System.UInt64,System.UInt64,UnityEngine.Vector3@)">
             <summary>
             Update the collision normal for an existing hard collision session in an existing movement session.
            
             This function is intended to be called once per hard collision per movement session per frame.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="collisionHandle">Handle for the collision session.</param>
             <param name="contactNormal">Normalized Vector3 surface normal of object that movement is colliding with.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if contactNormal was invalid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
            
             MLResult.Code will be MLResultCode.MovementInvalidCollisionHandle if collision handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.EndCollision(System.UInt64,System.UInt64)">
             <summary>
             End the tracking of a soft or hard collision session for a movement session.
             </summary>
             <param name="sessionHandle">Handle for the movement session.</param>
             <param name="collisionHandle">Handle for the collision session.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MovementInvalidMovementHandle if session handle is invalid.
            
             MLResult.Code will be MLResultCode.MovementInvalidCollisionHandle if collision handle is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMovement.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="resultCode">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata">
            <summary>
            Contains the meta data for a track
            Currently only provides support for ANSI strings
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.TrackTitle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoName">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoUrl">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoCoverUrl">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoName">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoUrl">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.Length">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicService">
            <summary>
            Manages MusicService.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnPlaybackStateChange">
            <summary> Raised when playback state has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnRepeatStateChange">
            <summary> Raised when repeat state has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnShuffleStateChange">
            <summary> Raisd when shuffle state has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnMetadataChange">
            <summary> Raised when metadata has has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnPositionChange">
            <summary> Raised when playback head position has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnError">
            <summary> Raised when an error has occured</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnStatusChange">
            <summary> Raised when the Music Service status has changed</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLMusicService.OnVolumeChange">
            <summary> Raised when the Music Service volume has changed</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.Volume">
            <summary>
            Music Volume in range [0.0f ... 1.0f]. This can only be set when a media has been loaded.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.TrackLength">
            <summary>
            Current Track Length in milliseconds
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.CurrentPosition">
            <summary>
            Current position of playhead in Milliseconds
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.PlaybackState">
            <summary>
            Current Playback State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.RepeatState">
            <summary>
            Current Repeat State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.ShuffleState">
            <summary>
            Current Shuffle State of the music service
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.CreateInstance(System.String,System.IntPtr)">
            <summary>
            static instance of the MLMusicService class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Start(System.String,System.IntPtr)">
             <summary>
             Starts the Music Service API.
             </summary>
             <param name="musicServiceProvider">The name of the music service provider</param>
             <param name="data">Extra user data passed as a void pointer through the callbacks</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if connected to MusicService successfully.
            
             MLResult.Code will be MLResultCode.InvalidParam if one of the parameters is invalid.
            
             MLResult.Code will be MLResultCode.AllocFailed if connection failed with resource allocation failure
            
             MLResult.Code will be MLResultCode.MediaGenericAlreadyExists if connection exists already.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the operation failed with an unspecified error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.StartAPI">
            <summary>
            Start Camera API and set up callbacks.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetAuthString(System.String)">
             <summary>
             Sets the authentication string for the MusicService
             </summary>
             <param name="authString">Service provider specific authentication string</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not music service is not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetURL(System.String)">
             <summary>
             Set a single, specific URL to play
             </summary>
             <param name="url">The URL to play</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetPlayList(System.String[])">
             <summary>
             Set an array of URLs to use for the playlist
             </summary>
             <param name="playList">The array of URLs</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.StartPlayback">
             <summary>
             Start playing the current track
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.StopPlayback">
             <summary>
             Stop playing the current track
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.PausePlayback">
             <summary>
             Pause the current track
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.ResumePlayback">
             <summary>
             Resume playback of the current track
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Seek(System.UInt32)">
             <summary>
             Seek to a specified position within the current track
             </summary>
             <param name="position">The position in milliseconds to seek </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Next">
             <summary>
             Advances to the next track in the playlist
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Previous">
             <summary>
             Moves to the previous track in the playlist
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetStatus(UnityEngine.XR.MagicLeap.MLMusicServiceStatus@)">
             <summary>
             Get the music service status
             </summary>
             <param name="status">Status from the music service</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetError(UnityEngine.XR.MagicLeap.MLMusicServiceError@)">
             <summary>
             Get the last music service error
             </summary>
             <param name="error">Structure to contain the error parameters</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetMetadata(UnityEngine.XR.MagicLeap.MLMusicServiceMetadata@)">
             <summary>
              Get the metadata for the current track.
             </summary>
             <param name="metadata">Structure to contain the meta data</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if one of the parameters is invalid.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetMetadata(UnityEngine.XR.MagicLeap.MLMusicServiceTrackType,UnityEngine.XR.MagicLeap.MLMusicServiceMetadata@)">
             <summary>
              Get the metadata for a track.
             </summary>
             <param name="trackType">The track to return meta information about.</param>
             <param name="metadata">Structure to contain the metadata.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if one of the parameters is invalid.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetMetadata(System.Int32,UnityEngine.XR.MagicLeap.MLMusicServiceMetadata@)">
             <summary>
              Get the metadata for a track.
             </summary>
             <param name="relativeOffest">The relative offest of the current track that you would like medtadata for.</param>
             <param name="metadata">Structure to contain the metadata.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.InvalidParam if one of the parameters is invalid.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnPlaybackStateChangeCallback(UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnRepeatStateChangeCallback(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnShuffleStateChangeCallback(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnMetadataChangeCallback(MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceMetadata@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnPositionChangeCallback(System.Int32,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnErrorCallback(UnityEngine.XR.MagicLeap.MLMusicServiceErrorType,System.Int32,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnStatusChangeCallback(UnityEngine.XR.MagicLeap.MLMusicServiceStatus,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.OnVolumeChangeCallback(System.Single,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.MLMusicServiceSetAuthString(System.String)">
             <summary>
             Sets the authentication string for the MusicService
             </summary>
             <param name="authString">Service provider specific authentication string</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not music service is not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.MLMusicServiceSetURL(System.String)">
             <summary>
             Set a single, specific URL to play
             </summary>
             <param name="url">The URL to play</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.MLMusicServiceSetPlayList(System.String[],System.UInt64)">
             <summary>
             Set an array of URLs to use for the playlist
             </summary>
             <param name="playlist">The array of URLs</param>
             <param name="size">The size of the playList array</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.MediaGenericNoInit if not connected.
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLNetworking">
            <summary>
            MLNetworking provides network connectivity status as well as current connection data.
            Connection data is only retrieved if device is connected and will be all zeros otherwise.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLNetworking.GetWifiData(UnityEngine.XR.MagicLeap.MLNetworkingWifiData@)">
             <summary>
             Retrieves data from the current wifi network.
             </summary>
             <param name="wifiData">Reference to MLNetworkingWifiData to populate.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if wifiData parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.ServiceNotAvailable if the corresponding service is not available.
            
             MLResult.Code will be MLResultCode.ServiceError if the corresponding service returned with error.
            
             MLResult.Code will be MLResultCode.WiFiDataStructureVersionError if the version number in MLNetworkingWiFiDataInternal is not recognized.
            
             MLResult.Code will be MLResultCode.WiFiServiceInvalidState if the WiFi service is not in the right state.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLNetworking.IsInternetConnected(System.Boolean@)">
             <summary>
             Retrieves if there's currently internet connection.
             </summary>
             <param name="isConnected">Reference to populate with whether or not there's internet connectivity.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if isConnected parameter is invalid.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.ServiceNotAvailable if the corresponding service is not available.
            
             MLResult.Code will be MLResultCode.ServiceError if the corresponding service returned with error.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLNetworking.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="resultCode">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivilegeId">
            <summary>
            Privilege Types:
            AutoGranted - Once it is included in the manifest the application is granted the privilege.
            Sensitive - Must be requested at runtime, as well as in the manifest, because it requires user consent on first use.
            Reality - Must be requested at runtime and every time the application gains focus, as well as in the manifest, because it requires user consent every active session.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Invalid">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AddressBookRead">
            <summary>
            Full read and search access to address book contacts.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AddressBookWrite">
            <summary>
            Ability to add, modify and delete address book contacts.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AudioRecognizer">
            <summary>
            Deprecated and scheduled for removal.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BatteryInfo">
            <summary>
            Query battery status/percentage.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.CameraCapture">
            <summary>
            Take pictures and videos using camera.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.WorldReconstruction">
            <summary>
            Access dense map.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.InAppPurchase">
            <summary>
            Use the in-app purchase mechanism.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AudioCaptureMic">
            <summary>
            Open a microphone stream of the users voice or the ambient surroundings.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.DrmCertificates">
            <summary>
            Provision and use DRM certficates.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Occlusion">
            <summary>
            Deprecated and scheduled for removal.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.LowLatencyLightwear">
            <summary>
            Access Low Latency data from the Lightwear.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Internet">
            <summary>
            Access the internet.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.IdentityRead">
            <summary>
            Read user profile attributes.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BackgroundDownload">
            <summary>
            Download in the background.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BackgroundUpload">
            <summary>
            Upload in the background.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.PowerInfo">
            <summary>
            Get power information.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.LocalAreaNetwork">
            <summary>
            Access other entities on the local network.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.VoiceInput">
            <summary>
            Receive voice input.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ConnectBackgroundMusicService">
            <summary>
            Connect to Background Music Service.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.RegisterBackgroundMusicService">
            <summary>
            Register with Background Music Service.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.PwFoundObjRead">
            <summary>
            Read found objects from Passable World.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.PcfRead">
            <summary>
            Read found objects from Passable World.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.NormalNotificationsUsage">
            <summary>
            Post notifications for users to see, dismiss own notifications, listen for own notification events.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.MusicService">
            <summary>
            Access Music Service functionality.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ControllerPose">
            <summary>
            Access controller pose data.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ScreensProvider">
            <summary>
            Create channels in the screens framework'.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.GesturesSubscribe">
            <summary>
            Subscribe to gesture hand mask and config data.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.GesturesConfig">
            <summary>
            Set/Get gesture configuration.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AddressBookBasicAccess">
            <summary>
            Access a manually selected subset of contacts from address book.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.HandMesh">
            <summary>
            Access hand mesh features.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.CoarseLocation">
            <summary>
            Get coarse location of the device.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.SocialConnectionsInvitesAccess">
            <summary>
            Ability to initiate invites to Social connections.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ComputerVision">
            <summary>
            SDK access CV related info from graph_pss.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.WifiStatusRead">
            <summary>
            Get Wifi status to application.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.FineLocation">
            <summary>
            Get fine location of the device.
            Type: Reality
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId">
            <summary>
            Privilege ids that need to be requested at runtime in addition
            to being specified in the app manifest. Descriptions for each
            value can be found in MLPrivilegeId enum. This is the subset of
            runtime privileges applicable to Unity apps.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.AudioCaptureMic">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.CameraCapture">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.LocalAreaNetwork">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.PcfRead">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.AddressBookRead">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.AddressBookWrite">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.CoarseLocation">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.ComputerVision">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.FineLocation">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivileges">
            <summary>
            Functionality to check or request privileges from the system.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery">
            <summary>
            Wrapper for the Async Request
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Callback">
            <summary>
            Query result callback.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.PrivilegeId">
            <summary>
            The requested privilege.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Request">
            <summary>
            The Async Request IntPtr.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CreateInstance">
            <summary>
            static instance of the MLPrivileges class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.Start">
             <summary>
             Privileges API, must be called
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the privilege system startup succeeded.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system failed to startup.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.StartAPI">
            <summary>
            Starts the Privileges, Must be called to start checking for
            privileges at runtime.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
            <param name="isSafeToAccessManagedObjects">Boolean that tells if it is safe to clear managed memory</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.Update(System.Single)">
            <summary>
            Polls for the result of pending privileges requests.
            </summary>
            <param name="timeDelta">The time in seconds it took to complete the last frame.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CheckPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
             <summary>
             Checks whether the application has the specified privileges.
             This does not solicit consent from the end-user.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.PrivilegeGranted if the privilege is granted.
            
             MLResult.Code will be MLResultCode.PrivilegeNotGranted if the privilege is denied or has not yet been requested.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
             <summary>
             Requests the specified privileges. This may possibly solicit consent
             from the end-user.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.PrivilegeGranted if the privilege is granted.
            
             MLResult.Code will be MLResultCode.PrivilegeNotGranted if the privilege is denied.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeAsync(UnityEngine.XR.MagicLeap.MLPrivilegeId,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPrivilegeId})">
             <summary>
             Request the specified privileges. This may solicit consent from the end-user.
             Note: The asynchronous callback occurs within the main thread.
             </summary>
             <param name="privilegeId"></param>
             <param name="callback">
             Callback to be executed when the privilege request has completed.
             The MLResult.Code returned could be one of the following:
             - MLResultCode.PrivilegeGranted if the privilege is granted.
             - MLResultCode.PrivilegeNotGranted if the privilege is denied.
             - MLResultCode.UnspecifiedFailure if the privilege system was not started.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the privilege request is in progress.
            
             MLResult.Code will be MLResultCode.InvalidParam if request is a null pointer or the callback is not valid.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.ProcessPendingQueries">
            <summary>
            Process pending requests and call the callback specified in the startup config.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.ProcessCompletedQueries(System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery})">
            <summary>
            Go through all completed queries and publish their results also clean them up.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeStatus(UnityEngine.XR.MagicLeap.MLPrivilegeId,System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery})">
            <summary>
            Try to get the result from a privilege request. The request object is internally freed when
            the result is ready (i.e. retval is either MLResultCode.PrivilegeGranted or MLResultCode.PrivilegeNotGranted).
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreensScreenInfo">
            <summary>
            System screen information.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Position">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Rotation">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Dimensions">
            <summary>
            Dimensions of the screens' bounding box.
            x, y and z represent
            width, height and depth respectively.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Id">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Scale">
            <summary>
            Scale of the screen in Universe
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry">
            <summary>
            Media watch entry for channel application.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Id">
            <summary>
            Identification number.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Title">
            <summary>
            Media title.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Subtitle">
            <summary>
            Media subtitle. Can be left as empty string.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackPositionMs">
            <summary>
            Last playback position in milliseconds.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackDurationMs">
            <summary>
            Total duration in milliseconds.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            * Title and Subtitle are not null.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.ToString">
            <inheritdoc />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreens">
            <summary>
            Manages list of Screens media watch history and
            exposes external screen placement.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailWidth">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailHeight">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailIntensityValue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.SupportedThumbnailTextureFormats">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens._watchHistory">
            <summary>
            Used to cache entries and avoid native calls if unnecessary.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens._watchHistoryList">
            <summary>
            Is not kept up to date. Only necessary for getting watch history at
            start.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CreateInstance">
            <summary>
            static instance of the MLScreens class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Start">
             <summary>
             Initializes the component.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.StartAPI">
            <summary>
            Starts the screens object requests, Must be called to receive screens data from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CreateThumbnailImage(UnityEngine.Texture2D)">
            Note: this function expects thumbnailImage to be 24-bit
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Add(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
             <summary>
             Adds new media watch entry to history with default thumbnail.
             </summary>
             <param name="entry">
             Entry to add. Id is ignored and gets overwritten if operation is successful.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Add(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@,UnityEngine.Texture2D)">
             <summary>
             Adds new media watch entry to history.
             </summary>
             <param name="entry">
             Entry to add. Id is ignored and gets overwritten if operation is successful.
             </param>
             <param name="thumbnailImage">
             Thumbnail image for entry. Format needs to be TextureFormat.RGB24.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Remove(System.Int64)">
             <summary>
             Removes entry from media watch history.
             </summary>
             <param name="entryId">Id of existing media watch entry.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.UpdateWatchHistory(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry,UnityEngine.Texture2D)">
             <summary>
             Updates media watch entry.
             </summary>
             <param name="entry">Id of existing media watch entry.</param>
             <param name="thumbnailImage">
             Optional thumbnail image for entry. Format needs to be TextureFormat.RGB24. If left out, default thumbnail will be used.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetEntry(System.Int64,UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
             <summary>
             Gets entry from media watch history.
             </summary>
             <param name="id">Id of existing media watch entry.</param>
             <param name="entry">Output entry if successful, unmodified otherwise.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetAllEntries">
            <summary>
            Gets all media watch history entries.
            </summary>
            <returns/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.ClearAllEntries">
             <summary>
             Clears all media watch history for this app.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetScreensInfo(System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLScreensScreenInfo}@)">
             <summary>
             Gets information for all system saved screens.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
            
             MLResult.Code will be MLResultCode.PermissionDenied if application does not have permission to get information about the specific screen.
            
             MLResult.Code will be MLResultCode.InvalidScreenId if the id for the screen is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetScreensInfo(System.UInt64,UnityEngine.XR.MagicLeap.MLScreensScreenInfo@)">
             <summary>
             Gets information for all system saved screens.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.PermissionDenied if application does not have permission to get information about the specific screen.
            
             MLResult.Code will be MLResultCode.InvalidScreenId if the id for the screen is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.UpdateScreenInfo(UnityEngine.XR.MagicLeap.MLScreensScreenInfo)">
             <summary>
             Updates screen info.
             Only the screen this app was launched from is a valid one.
             </summary>
             <param name="screenInfo"/>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.PermissionDenied if application does not have permission to get information about the specific screen.
            
             MLResult.Code will be MLResultCode.InvalidScreenId if the id for the screen is invalid.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetThumbnail(System.Int64,UnityEngine.Texture2D@)">
             <summary>
             Gets previously saved thumbnail for history entry.
             Avoid using this function, and maintain thumbnails
             through app persistent memory instead.
             </summary>
             <param name="entryId"/>
             <param name="imageThumbnail"/>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.ScreensServiceNotAvailable if failed due to the unavailability of the screens service.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetLauncherScreenId">
            <summary>
            Gets a screen id of the screen that lauched the application.
            </summary>
            <returns>the screen id if found -1 if not found.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLSecureStorage">
            <summary>
            User interface to ML's secure storage API.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.StoreData(System.String,System.Byte[])">
             <summary>
             Stores the specified data under the specified key. An existing key would be overwritten.
             </summary>
             <param name="dataKey">The key string associated with the data.</param>
             <param name="data">The data byte array to store.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.SecureStorageIOFailure if failed due to an I/O failure.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.StoreData``1(System.String,``0)">
             <summary>
             Generic store function for all value types.
             Using BinaryFormatter.Serialize() to serialize data to bytes.
             </summary>
             <param name="dataKey">The key string associated with the data.</param>
             <param name="value">The generic type value to store.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.SecureStorageIOFailure if failed due to an I/O failure.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetData(System.String,System.Byte[]@)">
             <summary>
             Retrieves the data associated with the specified key.
             </summary>
             <param name="dataKey">The key string to look for.</param>
             <param name="data">A valid array of bytes to store retrieved data.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.SecureStorageIOFailure if failed due to an I/O failure.
            
             MLResult.Code will be MLResultCode.SecureStorageBlobNotFound if the dataKey was not found.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetData``1(System.String,``0@)">
             <summary>
             Generic get function for all value types.
             Using BinaryFormatter.Deserialize() to deserialize bytes to specified value type.
             </summary>
             <param name="dataKey">The key string to look for.</param>
             <param name="value">A generic type value to store retrieved data.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.SecureStorageIOFailure if failed due to an I/O failure.
            
             MLResult.Code will be MLResultCode.SecureStorageBlobNotFound if the dataKey was not found.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.DeleteData(System.String)">
             <summary>
             Deletes the item associated with the specified key.
             </summary>
             <param name="dataKey">The key string of the item to delete.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.SecureStorageIOFailure if failed due to an I/O failure.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.CheckKey(System.String)">
             <summary>
             Utility function that searches for unicode characters in a string.
             </summary>
             <param name="dataKey">String to test.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.SerializeData(System.Object)">
            <summary>
            Method to serialize arbitrary objects into a byte array.
            </summary>
            <param name="obj">Base System.Object of data to serialize.</param>
            <returns>byte array of serialized data.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.DeserializeData(System.Byte[])">
            <summary>
            Method to deserialize arbitrary objects from a byte array.
            </summary>
            <param name="data">byte array of serialized data.</param>
            <returns>Base System.Object of deserialized data.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent">
            <summary>
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials">
            <summary>
            The credentials that can be used to for a user to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.accessKeyId">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.secretKey">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.sessionToken">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens">
            <summary>
            MLTokenAgentTokens contains tokens that are used to read and modify the user profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.idToken">
            <summary>
            The idToken contains information from the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.accessToken">
            <summary>
            The accessToken is the token that can be used to modify attributes of the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials">
            <summary>
            Internal raw representation of C API's MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.credentials">
            <summary>
            The credentials that can be used to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.tokens">
            <summary>
            The tokens that can be used to manage the user profile for a particular Audience.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials">
            <summary>
            Public represenation of MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentialsPtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the TokenAgent API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentials">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the TokenAgent API.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.Valid">
            <summary>
            Public property to check if internal pointer and hence this ClientCredentials is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.credentials">
            <summary>
            Forward credentials data to/from internal struture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.tokens">
            <summary>
            Forward token data to/from internal struture.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentials(UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
             <summary>
             GetClientCredentials is a blocking function that accesses the cloud and
             returns a MLTokenAgentClientCredentials structure containing the users credentials and
             tokens for a particular service (Audience).
             The library deduces the Audience being requested from the name of the calling service.
             </summary>
             <param name="outCredentials">
             MLTokenAgentClientCredentials output reference to a structure which was created
             with all its fields by the library. It must only be released using
             ReleaseClientCredentials.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.TokenAgent* if a token specific failure occurred during the operation.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentialsAsync(System.IntPtr@)">
             <summary>
             GetClientCredentialsAsync invokes the GetClientCredentials
             function asynchronously (in a different thread).
             </summary>
             <param name="outFuture">
             A pointer to an MLInvokeFuture pointer which provides the means to poll for completion and
             to retrieve the credentials returned by MLTokenAgentGetClientCredentials.
             This pointer will be freed by the library before returning from the first (and last)
             call to MLTokenAgentGetClientCredentialsWait, after the asynchronous call completed, that is
             after MLTokenAgentGetClientCredentialsWait returns any value that is not MLResult.Pending.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.TokenAgent* if a token specific failure occurred during the operation.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentialsWait(UnityEngine.XR.MagicLeap.MLInvokeFuture,System.UInt32,UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
             <summary>
             Having made a call to MLTokenAgentGetClientCredentialsAsync, the user can call
             MLTokenAgentGetClientCredentialsWait to detect whether the asynchronous call completed and if
             so, to retrieve the credentials in outCredentials. The call to MLTokenAgentGetClientCredentialsWait
             blocks until either msecTimeout msec elapses or the asynchronous function completes.
             </summary>
             <param name="future">
             MLInvokeFuture returned by the GetClientCredentialsAsync function
             </param>
             <param name="msecTimeout">
             The timeout in milliseconds.
             </param>
             <param name="outCredentials">
             Output reference where the credentials structure created
             by the library will be copied, if the asynchronous call completed.
            
             The location pointed to by out_credentials was set to the address of the
             MLTokenAgentClientCredentials structure allocated by the library.
             The returned credentils must be released when no longer needed by calling
             MLTokenAgentReleaseClientCredentials
             If any other value is returned, the location pointed to by outCredentials is set to
             0 (null).
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the operation completed successfully before the timeout elapsed.
            
             MLResult.Code will be MLResultCode.Pending if the timeout elapsed before the operation completed.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            
             MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.TokenAgent* if a token specific failure occurred during the operation.
             </returns>
             <remarks>
             Note:
             1. To poll without blocking use msecTimeout = 0
             2. After the function returns true, future is freed by the library and must not be used again in
             	a call to MLTokenAgentGetClientCredentialsWait.
             </remarks>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.ReleaseClientCredentials(UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
             <summary>
             ReleaseClientCredentials releases all resources associated with the
             MLTokenAgentClientCredentials stucture that was returned by the library.
             </summary>
             <param name="credentials">
             MLTokenAgentClientCredentials reference to a strcuture received using one of:
             GetClientCredentials or GetClientCredentialsWait.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if the operation completed successfully before the timeout elapsed.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLVerbosity">
            <summary>
            Class to handle verbosity of MLPlugin logs.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLVerbosity.Levels">
            <summary>
            Different levels of verbosity. Modify this to change the verbosity of the Magic Leap APIs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLVerbosity.Levels.Silent">
            <summary>
            Don't print any MLPlugin logs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLVerbosity.Levels.ErrorsOnly">
            <summary>
            Print only MLPlugin error logs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLVerbosity.Levels.WarningsAndErrors">
            <summary>
            Print MLPlugin error and warning logs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLVerbosity.Levels.Verbose">
            <summary>
            Print all MLPlugin logs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLVerbosity.Level">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags">
            <summary>
            Enumeration of plane types
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Vertical">
            <summary>
            Include planes whose normal is perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Horizontal">
            <summary>
            Include planes whose normal is parallel to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Arbitrary">
            <summary>
            Include planes with arbitrary normals that are not parallel or perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.AllOrientations">
            <summary>
            Include planes of all possible orientations.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.OrientToGravity">
            <summary>
            For non-horizontal planes, setting this flag will result in
            the plane rectangle being forced to perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Inner">
            <summary>
            If this flag is set, inner planes will be returned; if it is not set,
            outer planes will be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.IgnoreHoles">
            <summary>
            Instructs the plane system to ignore holes in planar surfaces.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticCeiling">
            <summary>
            Include planes semantically tagged as ceiling.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticFloor">
            <summary>
            Include planes semantically tagged as floor.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticWall">
            <summary>
            Include planes semantically tagged as wall.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticAll">
            <summary>
            Include all planes that are semantically tagged.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Polygons">
            <summary>
            If this flag is set, polygons will be returned along with applicable rectangular planes;
            if it's not set, only rectangular planes will be returned.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams">
            <summary>
            Plane Startup Configuration Parameters. Pass these to the Start function
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.Flags">
            <summary>
            The flags to apply to this query.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsCenter">
            <summary>
            The center of the bounding box which defines where planes extraction should occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsRotation">
            <summary>
            The rotation of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsExtents">
            <summary>
            The size of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MaxResults">
            <summary>
            The maximum number of results that should be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MinHoleLength">
            <summary>
            If MLPlanesQueryFlags.IgnoreHoles is not set, holes with a perimeter
            (in meters) smaller than this value will be ignored, and can be part of
            the plane. This value cannot be lower than 0 (lower values will be
            capped to this minimum).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MinPlaneArea">
            <summary>
            The minimum area (in squared meters) of planes to be returned. This value
            cannot be lower than 0.04 (lower values will be capped to this minimum).
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlane">
            <summary>
            A quad surface.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Center">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Rotation">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Width">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Height">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Flags">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Id">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundaries">
            <summary>
            A Polygonal plane surface.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundaries.Id">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundaries.Boundaries">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundary">
            <summary>
            The plane boundary defined by a single polygon and a collection of any holes found.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundary.Polygon">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlaneBoundary.Holes">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPolygon">
            <summary>
            The vertices contained within the world polygon.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPolygon.Vertices">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanes">
            <summary>
            Creates planes requests and delegates their result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Callback">
            <summary>
            Query result callback.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.MaxResults">
            <summary>
            The max results.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.PlanesResultsUnmanaged">
            <summary>
            The planes results unmanaged.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Planes">
            <summary>
            The planes.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.PlaneBoundariesList">
            <summary>
            The boundaries results unmanaged.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.PlaneBoundaries">
            <summary>
            The boundaries
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.IsRequestingBoundaries">
            <summary>
            If polygon boundaries have been requested.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Finalize">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Dispose">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.DefaultQueryFlags">
            <summary>
            The default query flags.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.CreateInstance">
            <summary>
            static instance of the MLWorldPlanes class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Start">
             <summary>
             Starts the Planes API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Update(System.Single)">
            <summary>
            Polls for the result of pending planes requests.
            </summary>
            <param name="timeElapsed">Time elapsed since last frame's update.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ProcessPendingQueries">
            <summary>
            Process pending requests and call the callback specified in the startup config.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetQueryResultForHandle(System.UInt64,UnityEngine.XR.MagicLeap.MLWorldPlanes.Query,System.Collections.Generic.Dictionary{System.UInt64,UnityEngine.XR.MagicLeap.MLWorldPlanes.Query})">
            <summary>
            Execute query.
            </summary>
            <param name="handle">ML internal handle for the pending query.</param>
            <param name="query">Query class for the pending query.</param>
            <param name="completedQueries">List of completed queries.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ExtractPlanesFromQueryResults(UnityEngine.XR.MagicLeap.MLWorldPlanes.Query,System.UInt32)">
            <summary>
            Extract unmanaged plane data and convert to managed plane data.
            </summary>
            <param name="query">Query class for the pending query.</param>
            <param name="numResults">Number of plane results returned.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ProcessCompletedQueries(System.Collections.Generic.Dictionary{System.UInt64,UnityEngine.XR.MagicLeap.MLWorldPlanes.Query})">
            <summary>
            Go through all completed queries and publish their results also clean them up.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetPlanes(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLWorldPlane[],UnityEngine.XR.MagicLeap.MLWorldPlaneBoundaries[]})">
             <summary>
             Request real world quad surfaces.
             Callback will never be called while request is still pending.
             </summary>
             <param name="queryParams">All values are required, omitting values may result in unexpected behavior.</param>
             <param name="callback">
             Callback used to report query results.
             Callback MLResult code will never be MLResultCode.Pending.
             </param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetPlanesInternal(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Object)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.BeginPlaneQuery(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Object)">
            <summary>
            Begin querying for planes.
            </summary>
            <param name="queryParams">All values are required, omitting values may result in unexpected behavior.</param>
            <param name="callback">Callback used to report query results.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.IsRequestingBoundaries(MagicLeapInternal.PlanesApiNativeBindings.MLPlanesQueryFlags)">
            <summary>
            Determine if the query flags contain a request for polygon boundaries.
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays">
            <summary>
            Sends requests to create Rays intersecitng world geometry and returns results through callbacks.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState">
            <summary>
            Enumeration of raycast result states.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.RequestFailed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.NoCollision">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.HitUnobserved">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.HitObserved">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback">
            <summary>
            Delegate used to convey the result of a raycast.
            </summary>
            <param name="state">The state of the raycast result.</param>
            <param name="hitpoint">Where in the world the collision happened.</param>
            <param name="normal">Normal to the surface where the ray collided.</param>
            <param name="confidence">The confidence of the ray cast result. Confidence is a non-negative value from 0 to 1 where closer to 1 indicates a higher quality.</param>
            \internal
            CAPI has custom result MLWorldRaycastResultState, thus we expose it instead of MLResult.
            \endinternal
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams">
            <summary>
            Parameters for a raycast request.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Position">
            <summary>
            Where the ray is cast from.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Direction">
            <summary>
            Direction of the ray to fire.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.UpVector">
            <summary>
            Up vector of the ray to fire.  Use (0, 0, 0) to use the up vector of the rig frame.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Width">
            <summary>
            The number of horizontal rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Height">
            <summary>
            The number of vertical rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.HorizontalFovDegrees">
            <summary>
            The horizontal field of view, in degrees.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.CollideWithUnobserved">
            <summary>
            If true, a ray will terminate when encountering an unobserved area and return
            a surface or the ray will continue until it ends or hits a observed surface.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.CreateInstance">
            <summary>
            static instance of the MLWorldRays class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Start">
             <summary>
             Starts the World Rays API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up memory plus disables raycast feature
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.DestroyNativeTracker">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Clear">
            <summary>
            Clear pending request queue, free up memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Update(System.Single)">
            <summary>
            Polls for the result of pending raycast requests.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.PublishResults(System.Collections.Generic.Dictionary{System.UInt64,MagicLeapInternal.RaycastApiNativeBindings.MLRaycastResult})">
            <summary>
            Publish results to every pending callback
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.GetWorldRays(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
             <summary>
             Requests a raycast with the given query parameters.
             </summary>
             <param name="query">Query parameters describing ray being cast.</param>
             <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.GetWorldRaysInternal(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.RequestRays(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary>
            Request world rays
            </summary>
            <param name="query">Query parameters describing ray being cast.</param>
            <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLFinger">
            <summary>
            MLFinger contains joint information about the finger instance.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.MCP">
            <summary>
            The Metacarpal phalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.PIP">
            <summary>
            The Proximal-interphalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.Tip">
            <summary>
            The Tip of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.DIP">
            <summary>
            The Distal-interphalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLFinger.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the MLFinger class.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLFinger.Update(System.Collections.Generic.List{UnityEngine.XR.Bone})">
            <summary>
            Updates the state of the finger.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLFinger.GetBonePosition(UnityEngine.XR.Bone)">
            <summary>
            Returns the position of the bone, from the Unity XR Input.
            </summary>
            <param name="bones">The XR.Bone to be examined.</param>
            <returns></returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHand">
            <summary>
            MLHand contains the hand tracking data including gestures,
            hand centers and key points for a specific hand.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPose">
            <summary>
            Gets currently recognized KeyPose.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPoseConfidence">
            <summary>
            The confidence value of the requested KeyPose, between [0, 1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPoseConfidenceFiltered">
            <summary>
            The filtered confidence value of the requested KeyPose, between [0, 1].
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLHand.OnKeyPoseBegin">
            <summary>
            Event is raised whenever a KeyPose starts being recognized for this hand.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLHand.OnKeyPoseEnd">
            <summary>
            Event is raised whenever a KeyPose stops being recognized for this hand.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.HandType">
            <summary>
            Gets the Hand Type (left or right)
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Thumb">
            <summary>
            Gets the Thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Index">
            <summary>
            Gets the Index finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Middle">
            <summary>
            Gets the Middle finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Ring">
            <summary>
            Gets the Ring finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Pinky">
            <summary>
            Gets the Pinky finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Wrist">
            <summary>
            Gets the Wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Center">
            <summary>
            Gets hand center.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.NormalizedCenter">
            <summary>
            Gets normalized center of the hand.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.HandConfidence">
            <summary>
            The confidence value of the hand, between [0, 1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.IsVisible">
            <summary>
            The hand is "visible" if the HandConfidence is above 0.8 and the KeyPose is not NoHand.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.#ctor(UnityEngine.XR.MagicLeap.MLHandType)">
            <summary>
            Initializes a new instance of the MLHand" class.
            </summary>
            <param name="handType">Hand type.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.Update(UnityEngine.XR.InputDevice)">
            <summary>
            Updates MLHand state variables. Note: It's not advisable
            to call this outside the context of the MLHands and MLKeyPoseManager
            </summary>
            <param name="device">Input device containing latest input data.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHands">
            <summary>
            MLHands is the entry point for all the hand tracking data
            including gestures, hand centers and key points for both hands.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHands._right">
            <summary>
            Right hand class used to get right hand specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHands._left">
            <summary>
            Left hand class used to get left hand specific data.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.KeyPoseManager">
            <summary>
            KeyPose Manager if the instance.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.Left">
            <summary>
            Left hand.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.Right">
            <summary>
            Right hand.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.CreateInstance">
            <summary>
            static instance of the MLHands class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.Start">
             <summary>
             Starts the Hands API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.StartAPI">
            <summary>
            Start tracking hands with all KeyPoses disabled.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.Update(System.Single)">
            <summary>
            Updates the KeyPose state based on the provided snapshot.
            </summary>
            <param name="timeDelta">The amount of time (in seconds) that has passed since the last call to Update().</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPoint">
            <summary>
            This class contains the valid state and current position of the KeyPoint.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoint.#ctor(System.Boolean)">
            <summary>
            Initialize the KeyPoint.
            </summary>
            <param name="supported">The valid state of the KeyPoint.</param>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoint.IsValid">
            <summary>
            Returns if the keypoint is supported by the hand tracking framework. This is static data and does not update every frame.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoint.IsSupported">
            <summary>
            Returns if the keypoint is supported by the hand tracking framework. This is static data and does not update every frame.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoint.Position">
            <summary>
            Returns the position of the KeyPoint.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPoseManager">
            <summary>
            Manages what KeyPoses are enabled and exposes the events.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLKeyPoseManager.OnHandKeyPoseBegin">
            <summary>
            Event is raised whenever a HandKeyPose starts being recognized.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLKeyPoseManager.OnHandKeyPoseEnd">
            <summary>
            Event is raised whenever a HandKeyPose stops being recognized.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.EnabledHandKeyPoses">
            <summary>
            Gets the currently enabled hand key poses.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.DisableAllKeyPoses">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.EnableKeyPoses(UnityEngine.XR.MagicLeap.MLHandKeyPose[],System.Boolean,System.Boolean)">
            <summary>
            Enables or disables an array of KeyPoses.
            </summary>
            <param name="keyPoses"/>
            <param name="enable">Enable or disable KeyPoses.</param>
            <param name="exclusive">
            When enabling and this is true, only the list of provided KeyPoses
            are enabled, all other previously-enabled KeyPoses get disabled. No effect if
            parameter enable is false.
            </param>
            <remarks>
            Enabling too many KeyPoses will currently lead to decreased sensitivity to each
            individual KeyPose.
            </remarks>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.SetKeyPointsFilterLevel(UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel)">
            <summary>
            Sets the keypoints filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.KeyPointsFilterLevel">
            <summary>
            Gets the keypoints filter level
            </summary>
            <returns>The filter level.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.SetPoseFilterLevel(UnityEngine.XR.MagicLeap.MLPoseFilterLevel)">
            <summary>
            Sets the pose filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.PoseFilterLevel">
            <summary>
            Gets the pose filter level
            </summary>
            <returns>The filter level.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.#ctor(UnityEngine.XR.MagicLeap.MLHand,UnityEngine.XR.MagicLeap.MLHand)">
            <summary/>
            <param name="leftHand">Left hand to which MLKeyPoseManager will subscribe for events.</param>
            <param name="rightHand">Right hand to which KeyPoseManager will subscribe for events.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLThumb">
            <summary>
            MLThumb contains joint information about the thumb instance.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.MCP">
            <summary>
            The Metacarpophalangeal joint of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.IP">
            <summary>
            The Interphalangeal joint of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.Tip">
            <summary>
            The Tip of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.CMC">
            <summary>
            The Carpals-Metacarpals for the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLThumb.#ctor">
            <summary>
            Initializes a new instance of the MLThumb class.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLThumb.Update(System.Collections.Generic.List{UnityEngine.XR.Bone})">
            <summary>
            Updates the state of the thumb.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWrist">
            <summary>
            MLWrist contains joint information about the wrist instance.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Center">
            <summary>
            The center of the  wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Ulnar">
            <summary>
            The Ulnar of the wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Radial">
            <summary>
            The Radial of the wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWrist.#ctor">
            <summary>
            Initializes a new instance of the MLWrist class.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWrist.Update(UnityEngine.XR.InputDevice)">
            <summary>
            Updates the state of the MLWrist.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.ButtonDeltaState">
            <summary>
            A series of flags to determine if a button has been pressed or released since the last time checked.
            Useful for identifying press/release events that occur in a single frame or sample.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputDeviceEventData">
            <summary>
            Contains information about an input device and the current raycast hit state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDeviceEventData.#ctor(UnityEngine.EventSystems.EventSystem)">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDeviceEventData.Ray">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDeviceEventData.MaxDistance">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputDevice">
            <summary>
            A class that contains UI and State information about a device.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.HoverTargets">
            <summary>
            This tracks the current GUI targets being hovered over.  Syncs up to <see cref="F:UnityEngine.EventSystems.PointerEventData.hovered"/>.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PointerTarget">
            <summary>
             Tracks the current enter/exit target being hovered over at any given moment. Syncs up to <see cref="P:UnityEngine.EventSystems.PointerEventData.pointerEnter"/>.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.IsDragging">
            <summary>
            Used to cache whether or not the current mouse button is being dragged.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.dragging"/> for more details.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PressedTime">
            <summary>
            Used to cache the last time this button was pressed.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.clickTime"/> for more details.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PressedPosition">
            <summary>
            The position on the screen that this button was last pressed.  In the same scale as <see cref="!:MouseModel.Position"/>, and caches the same value as <see cref="P:UnityEngine.EventSystems.PointerEventData.pressPosition"/>.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PressedRaycast">
            <summary>
            The Raycast data from the time it was pressed.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.pointerPressRaycast"/> for more details.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PressedGameObject">
            <summary>
            The last gameobject pressed on that can handle press or click events.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.pointerPress"/> for more details.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.PressedGameObjectRaw">
            <summary>
            The last gameobject pressed on regardless of whether it can handle events or not.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.rawPointerPress"/> for more details.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.DraggedGameObject">
            <summary>
            The gameobject currently being dragged if any.  See <see cref="P:UnityEngine.EventSystems.PointerEventData.pointerDrag"/> for more details.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.InternalData.Reset">
            <summary>
            Resets this object to it's default, unused state.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.Select">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.SelectDelta">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.ScrollDelta">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.ChangedThisFrame">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.Position">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.TouchActive">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputDevice.Orientation">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.Initialize">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.Reset">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.OnFrameFinished">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.UpdateTouch(UnityEngine.XR.MagicLeap.MLInputController,System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.CopyTo(UnityEngine.XR.MagicLeap.MLInputDeviceEventData@)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputDevice.CopyFrom(UnityEngine.XR.MagicLeap.MLInputDeviceEventData)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.IMLPersistentStorage`1">
            <summary>
            Persistent Storage interface.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBindingType">
            <summary>
            Content Binding type.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindingType.PCF">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindingType.FoundObjects">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBinding">
            <summary>
            MLContentBinding class represents the binding between the virtual object/user content
            and the Persistent coordinate frame (PCF). It stores the offset of the content with respect to
            the PCF and restores it from the persistent store (MLPersistentStore).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContentBinding.GameObject">
            <summary>
            Gets or sets the game object. GameObject represents the virtual
            content.
            </summary>
            <value>The game object.</value>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContentBinding.IsValid">
            <summary>
            Gets a value indicating whether this <see cref="T:UnityEngine.XR.MagicLeap.MLContentBinding"/> is valid.
            This checks for a valid ObjectId and if the GameObject is set
            </summary>
            <value><c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.ObjectId">
            <summary>
            Virtual object identifier.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.PCF">
            <summary>
            PCF that the virtual object is bound to
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.BindingType">
            <summary>
            Binding representing the connection between PCF and ObjectId.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.Offset">
            <summary>
            The offset of the virtual object to the PCF.
            This is in the Coordinate Space of the PCF.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.OrientationOffset">
            <summary>
            The orientation offset from PCF.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinding.Update">
             <summary>
             Updates the binding information based on the PCF and GameObject locations.
             It will child the game object under the game object representing the PCF.
             It checks if the PCF is a good state before carrying out this operation
             </summary>
             <returns>
             MLResult.code will be MLResult.Ok when operation is successful
            
             MLResult.code will be MLResult.InvalidParam when GameObject is not set or PCF is not set or CurrentResult value in MLPCF is not Ok
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinding.Restore(System.Action{UnityEngine.XR.MagicLeap.MLContentBinding,UnityEngine.XR.MagicLeap.MLResult})">
             <summary>
             Restores the binding between the PCF and the virtual object and returns the result
             through the callback. Restoration includes childing the virtual object under PCF game object.
             and restoring the old local offsets (rotation and position).
             <param name="callback"> Callback to be called when the restore finishes. </param>
             </summary>
             <returns>
             MLResult.code will be MLResult.Ok when operation is successful
            
             MLResult.code will be MLResult.InvalidParam when GameObject is not set or PCF is not set or CurrentResult value in MLPCF is not Ok
            
             MLResult.code will be MLResult.UnspecifiedFailure when MLPersistentCoordinateFrames is not started
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBindings">
            <summary>
            Storage entry
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindings.Version">
            <summary>
            The version.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindings.Bindings">
            <summary>
            The bindings.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBinder">
            <summary>
            MLContentBinder class. Helper class for creating bindings and restoring them
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinder.BindToPCF(System.String,UnityEngine.GameObject,UnityEngine.XR.MagicLeap.MLPCF)">
            <summary>
            Creates a binding between the virtual object and the specified PCF.
            </summary>
            <param name="virtualObjId">Virtual object identifier.</param>
            <param name="go">GameObject representing the virtual object. (Note: This is not serialized)</param>
            <param name="pcf">PCF to bind to</param>
            <returns>
             MLContentBinding object with mapping between virtual object and PCF. Please note that
            just calling this function is not enough to persist the binding. Call MLPersistentStore.Save to persist this mapping.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinder.Restore(UnityEngine.XR.MagicLeap.MLContentBinding,System.Action{UnityEngine.XR.MagicLeap.MLContentBinding,UnityEngine.XR.MagicLeap.MLResult})">
             <summary>
             Restore the specified binding and call the callback when the restore is complete
             </summary>
             <param name="binding">Binding.</param>
             <param name="callback">callback.</param>
             <returns>
             MLResult.code will be MLResult.Ok when operation is successful
            
             MLResult.code will be MLResult.InvalidParam when callback is null
            
             MLResult.code will be MLResult.UnspecifiedFailure when MLPersistentCoordinateFrames is not started
             </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPCF">
            <summary>
             MLPCF class is an abstraction for representing anchor points, called Persistent
             Coordinate Frames or PCFs, in the real world. PCFs cannot be created, modified or
             destroyed from the app level. Rather, we query the OS for any PCFs it has stored
             and query again to determine the PCF location, if it is within the vicinity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPCF.CFUID">
            <summary>
            The cfuid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.Position">
            <summary>
            Position of the MLPCF for the current session
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.Orientation">
            <summary>
            Orientation of the MLPCF for the current session
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.Confidence">
            <summary>
            A confidence value (from [0, 1]) representing the confidence in the
            Persistent Coordinate Frame error within the valid radius.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.ValidRadiusM">
            <summary>
            The radius (in meters) within which the confidence is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.RotationErrDeg">
            <summary>
            The rotational error (in degrees).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.TranslationErrM">
            <summary>
            The translation error (in meters).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.CurrentResult">
             <summary>
             Gets or sets the current result. It could be one of the following:
            
             MLResultCode.Pending - Position/Orientation does not exist
            
             MLResultCode.Ok - Position/Orientation is reliable
            
             Otherwise - Position/Orientation is unreliable
             </summary>
             <value>The current result.</value>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnCreate">
            <summary>
            OnCreated event gets fired when a new PCF gets created. The parameter is the
            the instance of the MLPCF that got created.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnUpdate">
            <summary>
            OnUpdate event gets fired when the position, orientation of the PCF changes.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnLost">
            <summary>
            OnLost is triggered when the CurrentResult changes MLResultCode.Ok to something other
            than MLResultCode.Ok. This indicates that the PCF is no longer available in the current map.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnRegain">
            <summary>
            OnRegain is triggered when the CurrentResult changes from something other than MLResultCode.Ok
            to MLResultCode.Ok. This indicates that the PCF was found again after it was lost.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPCF.ToString">
            <summary>
            Returns the string representation of the pcf. Use it only for debugging.
            </summary>
            <returns>Returns the string representation of the pcf.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames">
            <summary>
            MLPersistentCoordinateFrames class contains the API to interface with the
            Persistent Coordinate Frame C API.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.DelayBetweenAllPCFsQueryInSeconds">
            <summary>
            Delay between querying for all PCFs. Used by GetAllPCFs(...)
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.StartTimeOutInSeconds">
            <summary>
            Initialization timeout in seconds. Countdown begins when calling Start().
            Timing out just means you haven't localized to a map since starting the API.
            User will only receive a log statement
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames._pcfMap">
            <summary>
            Map of PCFs that we're currently tracking. A PCF is only tracked when it's added via QueueForUpdates().
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.OnInitialized">
             <summary>
             Event for notifying if the system is ready. Event Handlers are expected to stop listening immediately after the event is triggered.
             The parameter could be one of the following:
            
             MLResult.Code will be MLResultCode.Ok if successful.
             </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.IsReady">
            <summary>
            variable for polling if the system is ready
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.Start">
             <summary>
             Starts the PersistentCoordinateFrame API.
             </summary>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.PassableWorldLowMapQuality if map quality is too low for content persistence. Continue building the map.
            
             MLResult.Code will be MLResultCode.PassableWorldUnableToLocalize if currently unable to localize into any map. Continue building the map.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.StartAPI">
            <summary>
            Starts the API.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.Update(System.Single)">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.UpdatePCFTransforms">
            <summary>
            Update Transforms of PCFs that we're tracking
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.QueueForUpdates(UnityEngine.XR.MagicLeap.MLPCF)">
            <summary>
            Adds the given PCF to the list of PCFs that are updated every frame
            </summary>
            <param name="pcf">PCF to be updated</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.FindClosestPCF(UnityEngine.Vector3,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPCF})">
             <summary>
             Retrieve closest known PCF to the given position and query for the position and rotation of the PCF.
             </summary>
             <param name="position">The position of the object we want to anchor</param>
             <param name="callback">The method called when the closest PCF is found</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            
             MLResult.Code will be MLResultCode.Pending if the PCF system isn't fully initialized. Poll the IsReady or listen to OnInitialized event
             to know if the system is ready.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.PassableWorldLowMapQuality if map quality is too low for content persistence. Continue building the map.
            
             MLResult.Code will be MLResultCode.PassableWorldUnableToLocalize if currently unable to localize into any map. Continue building the map.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetPCFPosition(UnityEngine.XR.MagicLeap.MLPCF,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPCF})">
             <summary>
             Gets the PCF position and rotation from the transform.
             </summary>
             <param name="pcf">MLPCF with a valid CFUID</param>
             <param name="callback">Called with the result when the return value of the function is MLResult.IsOk</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            
             MLResult.Code will be MLResultCode.Pending if the PCF system isn't fully initialized. Poll the IsReady or listen to OnInitialized event
             to know if the system is ready.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.SnapshotPoseNotFound if Coordinate Frame is valid, but not found in the current pose snapshot.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetPCFPose(UnityEngine.XR.MagicLeap.MLPCF,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPCF})">
             <summary>
             Gets the PCF position and rotation from the transform.
             </summary>
             <param name="pcf">MLPCF with a valid CFUID</param>
             <param name="callback">Called with the result when the return value of the function is MLResult.IsOk</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            
             MLResult.Code will be MLResultCode.Pending if the PCF system isn't fully initialized. Poll the IsReady or listen to OnInitialized event
             to know if the system is ready.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.SnapshotPoseNotFound if Coordinate Frame is valid, but not found in the current pose snapshot.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetAllPCFs(System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLPCF}@,System.Int32)">
             <summary>
             Returns a list of all the PCFs stored in the device. However, only PCFs in the current
             Landscape can be located. Call GetPCFPose() on each PCF to determine their location.
             Note: It is ill-advised to call this function often with DelayBetweenAllPCFsQuery set
             to near zero because the underlying mechanism is expensive.
             </summary>
             <param name="pcfList">Pcf list.</param>
             <param name="maxResults">Max results.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.Pending if the PCF system isn't fully initialized. Poll the IsReady or listen to OnInitialized event
             to know if the system is ready.
            
             MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            
             MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            
             MLResult.Code will be MLResultCode.PassableWorldLowMapQuality if map quality is too low for content persistence. Continue building the map.
            
             MLResult.Code will be MLResultCode.PassableWorldUnableToLocalize if currently unable to localize into any map. Continue building the map.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1">
            <summary>
            File storage implementation.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Finalize">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Load(System.String)">
            <summary>
            Loads the persistent data from the given file.
            </summary>
            <param name="fileName">Name of the file to load.</param>
            <returns>MLContentBindings from file contents if found, null if not found.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.LoadAsync(System.String,System.Action{System.Boolean,`0})">
            <summary>
            Currently not implemented.
            </summary>
            <param name="fileName">File name.</param>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Save(System.String,`0)">
            <summary>
            Saves the persistent data to the given file name.
            </summary>
            <param name="fileName">Name of the file to save to.</param>
            <param name="data">Data to save.</param>
            <returns>True if the file exists, false if not found after writing.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.SaveAsync(System.String,`0,System.Action{System.Boolean})">
            <summary>
            Currently not implemented.
            </summary>
            <param name="fileName">File name.</param>
            <param name="data">Data.</param>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Dispose">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentStore">
            <summary>
            MLPersistentStore implementation.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPersistentStore.AllBindings">
            <summary>
            Getter for all the bindings stored
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CreateInstance">
            <summary>
            static instance of the MLPersistentStore class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Start">
            <summary>
            Starts the MLPersistentStore.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.StartAPI">
            <summary>
            Loads bindings from the persistent file storage
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.LoadBindings">
            <summary>
            Loads the store bindings between virtual object and the PCFs
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CacheData(UnityEngine.XR.MagicLeap.MLContentBindings)">
            <summary>
            stores the bindings in a look up dictionary
            </summary>
            <param name="data">Data.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Contains(System.String)">
            <summary>
            Checks if the specified virtual object exists in the store
            </summary>
            <returns>True if store contains the virtual object.</returns>
            <param name="virtualObjId">Virtual object identifier.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.ContainsInternal(System.String)">
            <summary>
            Checks if the specified virtual object exists in the store
            </summary>
            <returns><c>true</c>, if internal was contained, <c>false</c> otherwise.</returns>
            <param name="virtualObjId">Virtual object identifier.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Load(System.String,UnityEngine.XR.MagicLeap.MLContentBinding@)">
             <summary>
             Load the Content binding for the specified virtualObjId
             </summary>
             <param name="virtualObjId">Virtual object identifier.</param>
             <param name="binding">Binding.</param>
             <returns>
             MLResult.Code will be MLResultCode.Ok if successful.
            
             MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
             </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CleanupAPI(System.Boolean)">
            <summary>
            Cleanups the API.
            </summary>
            <param name="isSafeToAccessManagedObjects">If set to <c>true</c> is safe to access managed objects.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Update(System.Single)">
            <summary>
            Update with specified timeDelta.
            </summary>
            <param name="timeDelta">Time delta.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Save(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Save the specified binding. Note : currently this function saves to the file system
            everytime you call it, so it can be slow.
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.InternalSave(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Saves the binding. The binding is checked for validity and also
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.DeleteBinding(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Deletes the binding if it exists. otherwise it's a no op.
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.DeleteAll">
            <summary>
            Deletes all bindings stored.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLAudioOutputDevice">
            <summary>
            The currently active output device.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraError">
            <summary>
            Camera errors
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Invalid">
            <summary>
            Invalid state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Disabled">
            <summary>
            Camera disabled
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.DeviceFailed">
            <summary>
            Camera device failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.ServiceFailed">
            <summary>
            Camera service failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.CaptureFailed">
            <summary>
            Capture failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Unknown">
            <summary>
            Unknown capture error
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraOutputFormat">
            <summary>
            Captured output format
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutputFormat.YUV_420_888">
            <summary>
            YUV planar format
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutputFormat.JPEG">
            <summary>
            Compressed output stream
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo">
            <summary>
            Per plane info for captured output
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Width">
            <summary>
            Width of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Height">
            <summary>
            Height of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Stride">
            <summary>
            Stride of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.BytesPerPixel">
            <summary>
            Number of bytes used to represent a pixel
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Data">
            <summary>
            Image data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Size">
            <summary>
            Number of bytes in the image output data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraOutput">
            <summary>
            Captured output
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.PlaneCount">
            <summary>
            Number of output image planes:
            - 1 for compressed output such as JPEG stream,
            - 3 for separate color component output such as YUV/YCbCr/RGB.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.Planes">
            <summary>
            Output image plane info.
            The number of output planes is specified by PlaneCount.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.Format">
            <summary>
            Supported output format specified by MLCameraOutputFormat
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.YUVBuffer">
            <summary>
            Contains both the data and information necessary to read the data for a specific buffer in a YUV capture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.IsValid">
            <summary>
            Indicate if this structure contians valid data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Width">
            <summary>
            Width of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Height">
            <summary>
            Height of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Stride">
            <summary>
            Stride of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.BytesPerPixel">
            <summary>
            Number of bytes used to represent a pixel
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Data">
            <summary>
            Image Data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Size">
            <summary>
            Number of bytes in the image output data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.YUVFrameInfo">
            <summary>
            Contains the information and data of each of the available buffers/planes in a YUV capture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.Y">
            <summary>
            Y Buffer information and data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.U">
            <summary>
            U Buffer information and data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.V">
            <summary>
            V Buffer information and data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureType">
            <summary>
            Capture operation type
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.Image">
            <summary>
            To capture an image and save the JPEG-compressed data to a file.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.ImageRaw">
            <summary>
            To capture an image and obtain the JPEG-compressed stream.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.Video">
            <summary>
            To capture a video and save it to a file.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.VideoRaw">
            <summary>
            To capture a video and access the raw buffer of the frames.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraResultExtras">
            <summary>
            ResultExtras is a structure to encapsulate various indices for a capture result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.RequestId">
            <summary>
            An integer to index the request sequence that this result belongs to
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.BurstId">
            <summary>
            An integer to index this result inside a request sequence, starting from 0
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.FrameNumber">
            <summary>
            A 64bit integer to index the frame number associated with this result
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.PartialResultCount">
            <summary>
            The partial result count (index) for this capture result
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.VcamTimestampUs">
            <summary>
            VCam exposure timestamp in microseconds (us)
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraFrameMetadata">
            <summary>
            Structure to encapsulate camera frame specific metadata.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraFrameMetadata.ExposureTimeNs">
            <summary>
            Frame exposure time for the given frame in nanoseconds.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraDeviceStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve device status
            and use these masks to view device status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve capture status
            and use these masks to view capture status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEMode">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataColorCorrectionAberrationMode">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAELock">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBMode">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBLock">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataColorCorrectionMode">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEAntibandingMode">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataScalerAvailableFormats">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataScalerAvailableStreamConfigurations">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEState">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBState">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X0">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X1">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X2">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y0">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y1">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y2">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z0">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z1">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z2">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.Blue">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.GreenEven">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.GreenOdd">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.Red">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.Minimum">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.Maximum">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.#ctor(System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Left">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Top">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Right">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Bottom">
            <summary/>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus">
            <summary>
            Defines possible status values for sending invites with MLConnectionsRequestInvite. Links to MLConnectionsInviteStatus in ml_connections.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.SubmittingRequest">
            <summary>
            The request to start the sending process is being submitted to the system.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.Pending">
            <summary>
            The sending process has successfully initiated and invite dialog is being displayed to the user.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.Dispatched">
            <summary>
            The invite dialog has been completed by the user and the invite was successfully sent.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.DispatchFailed">
            <summary>
            The user has completed the invite dialog but the system was unable to send the invite.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.Cancelled">
            <summary>
            The sending process was cancelled either by user, system or by CancelSentInvite
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus.InvalidHandle">
            <summary>
            Unable to determine invite status, because provided handle is invalid.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLConnectionsInviteeFilter">
            <summary>
            Defines default filter for Magic Leap connections when displaying invite dialog to the user in MLConnectionsRequestInvite. Links to MLConnectionsInviteeFilter in ml_connections.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteeFilter.Followers">
            <summary>
            Show Magic Leap connections who are online and follow current user.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLConnectionsInviteeFilter.Mutual">
            <summary>
            Show Magic Leap connections who are online and are mutual followers for current user.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLControllerMode">
            <summary>
            The tracking mode used for the controller.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLControllerCalibAccuracy">
            <summary>
            The calibration accuracy levels for controller.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters">
            <summary>
            Contains camera intrinsic parameters.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.Width">
            <summary>
            Camera width.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.Height">
            <summary>
            Camera height.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.FocalLength">
            <summary>
            Camera focal length.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.PrincipalPoint">
            <summary>
            Camera principle point.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.FOV">
            <summary>
            Field of view.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCVCameraIntrinsicCalibrationParameters.Distortion">
            <summary>
            Distortion Coefficients.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandKeyPose">
            <summary>
            Static key pose types which are available when both hands are separated.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Finger">
            <summary>Index finger.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Fist">
            <summary>A closed fist.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Pinch">
            <summary>A pinch.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Thumb">
            <summary>A closed fist with the thumb pointed up.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.L">
            <summary>An L shape</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.OpenHand">
            <summary>An open hand.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.OpenHandBack">
            <summary>Deprecated. Please use OpenHand.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Ok">
            <summary>A pinch with all fingers, except the index finger and the thumb, extended out.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.C">
            <summary>A rounded 'C' alphabet shape.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.NoPose">
            <summary>No pose was recognized.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.NoHand">
            <summary>No hand was detected. Should be the last pose.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel">
            <summary>Configured level for keypoints filtering of keypoints and hand centers.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.Raw">
            <summary>Default value, no filtering is done, the points are raw.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.Smoothed">
            <summary>Some smoothing at the cost of latency.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.ExtraSmoothed">
            <summary>Predictive smoothing, at higher cost of latency.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPoseFilterLevel">
            <summary>Configured level of filtering for static poses.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.Raw">
            <summary>Default value, No filtering, the poses are raw.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.Robust">
            <summary>Some robustness to flicker at some cost of latency.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.ExtraRobust">
            <summary>More robust to flicker at higher latency cost.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandType">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandType.Left">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandType.Right">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingError">
            <summary>
            A set of possible error conditions that can cause Head Tracking to
            be less than ideal.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.None">
            <summary>
            No error, tracking is nominal.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.NotEnoughFeatures">
            <summary>
            There are not enough features in the environment.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.LowLight">
            <summary>
            Lighting in the environment is not sufficient to track accurately.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.Unknown">
            <summary>
            Head tracking failed for an unkown reason.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingMode">
            <summary>
            A set of possible tracking modes the Head Tracking system can be in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMode.Mode6DOF">
            <summary>
            Full 6 degrees of freedom tracking (position and orientation).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMode.ModeUnavailable">
            <summary>
            Head tracking is unavailable.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent">
            <summary>
            A set of all types of map events that can occur that a developer
            may have to handle.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent.Lost">
            <summary>
            Map was lost. It could possibly recover.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent.Recovered">
            <summary>
            Previous map was recovered.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent.RecoveryFailed">
            <summary>
            Failed to recover previous map.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent.NewSession">
            <summary>
            New map session created.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MapEventsExtension">
            <summary>
            A class to provide an extension for the MLHeadTrackingMapEvent enum.
            Provides an alternative to binary operator use in order to find if a
            specific event has occured given a MLHeadTrackingMapEvent bitmask.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingState">
            <summary>
            A structure containing information on the current state of the
            Head Tracking system.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Mode">
            <summary>
            What tracking mode the Head Tracking system is currently in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Confidence">
            <summary>
            A confidence value (from 0..1) representing the confidence in the
            current pose estimation.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Error">
            <summary>
            Represents what tracking error (if any) is present.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInvokeFuture">
            <summary>
            MLInvokeFuture represents a type which is opaque (incomplete) to users of this library.
            A pointer to an MLInvokeFuture is returned by the Async function.
            Users pass it to the Wait function to determine if the asynchronous method has
            completed and to retrieve the result if it has.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityAttributeKey">
            <summary>
            MLIdentityAttributeKey identifies an attribute in a user profile.
            Attributes that were not known at the time the library was built, are marked as Unknown.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings">
            <summary>
            Represents the settings of an Image Target
            All fields are required for an Image Target to be tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.Name">
            <summary>
            Name of the target
            - This name has to be unique across all targets added to the Image Tracker.
            - Caller should allocate memory for this.
            - Encoding should be in UTF8.
            - This will be copied internally.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.LongerDimension">
            <summary>
            LongerDimension refer to the size of the longer dimension of the physical Image
            Target in Unity scene units..
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.IsStationary">
             <summary>
             Set this to \c true to improve detection for stationary targets.
            
             - An Image Target is a stationary target if its position in the physical
               world does not change.
             - This is best suited for cases where the target is stationary and when the
               local geometry (environment surrounding the target) is planar.
             - When in doubt set this to false.
            
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.IsEnabled">
             <summary>
             Set this to \c true to track the image target.
            
             - Disabling the target when not needed marginally improves the tracker CPU
               performance.
             - This is best suited for cases where the target is temporarily not needed.
               If the target no longer needs to be tracked it is best to use remove the
               target.
             </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerImageFormat">
            <summary>
            When adding image targets to the Image Tracker using
            MLImageTrackerAddTargetFromArraySpecify the image format using this enum. </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerSettings">
            <summary>
            Represents the list of Image Tracker settings.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerSettings.MaxSimultaneousTargets">
             <summary>
             Maximum number of Image Targets that can be tracked at any given time.
            
             If the tracker is already tracking the maximum number of targets
             possible then it will stop searching for new targets which helps
             reduce the load on the CPU. For example, if you are interested in
             tracking a maximum of x targets simultaneously from a list y (x &lt; y)
             targets then set this parameter to x.
            
             The valid range for this parameter is from 1 through 25.
             </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState">
            <summary>
            Gesture state. Links to MLInputControllerTouchpadGestureState in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.End">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.Continue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.Start">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType">
            <summary>
            Recognized touchpad gesture types. Links to MLInputControllerTouchpadGestureType in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Tap">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapDown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapUp">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceDwell">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.SecondForceDown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.LongHold">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.RadialScroll">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Swipe">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Scroll">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Pinch">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerButton">
            <summary>
            Buttons on device, controller, and Mobile Companion App. Links to MLInputControllerButton in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.Bumper">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.HomeTap">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerType">
            <summary>
            Types of controllers recognized by Magic Leap platform. Links to MLInputControllerType in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.Control">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.MobileApp">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerDof">
            <summary>
            Degrees-of-freedom mode of controller. Links to MLInputControllerDof in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.Dof3">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.Dof6">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection">
            <summary>
            Direction of touchpad gesture. Links to MLInputControllerTouchpadGestureDirection in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Up">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Down">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Left">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Right">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.In">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Out">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Clockwise">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.CounterClockwise">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED">
            <summary>
            Controller LED pattern. Links to MLInputControllerFeedbackPatternLED in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock7">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock8">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock9">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock10">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock11">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock12">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1And7">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2And8">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3And9">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4And10">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5And11">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6And12">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED">
            <summary>
            Feedback effects for LED target. Links to MLInputControllerFeedbackEffectLED in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCW">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCCW">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Pulse">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCW">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCCW">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Blink">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED">
            <summary>
            Feedback colors for LED target. Links to MLInputControllerFeedbackColorLED in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightMissionRed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelMissionRed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightFloridaOrange">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelFloridaOrange">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightLunaYellow">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelLunaYellow">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightNebulaPink">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelNebulaPink">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightCosmicPurple">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelCosmicPurple">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightMysticBlue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelMysticBlue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightCelestialBlue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelCelestialBlue">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightShaggleGreen">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelShaggleGreen">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED">
            <summary>
            Feedback effect speed for LED target. Links to MLInputControllerFeedbackEffectSpeedLED in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Slow">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Medium">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Fast">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe">
            <summary>
            Controller vibration pattern. Links to MLInputControllerFeedbackPatternVibe in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Click">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Bump">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.DoubleClick">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Buzz">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Tick">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceUp">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDwell">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.SecondForceDown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity">
            <summary>
            Controller vibration intensity. Links to MLInputControllerFeedbackIntensity in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.Low">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.Medium">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.High">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputTabletDeviceType">
            <summary>
            Types of input tablet devices recognized. Links to MLInputTabletDeviceType in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceType.Unknown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceType.Wacom">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputTabletDeviceToolType">
            <summary>
            Types of tools used with the tablet device. Links to MLInputTabletDeviceToolType in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceToolType.Unknown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceToolType.Pen">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceToolType.Eraser">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton">
            <summary>
            Buttons on input tablet device. Links to MLInputTabletDeviceButton in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Unknown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button1">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button2">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button3">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button4">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button5">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button6">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button7">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button8">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button9">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button10">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button11">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceButton.Button12">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask">
            <summary>
            Mask value to determine the validity of variables in MLInputTabletDeviceState. Links to MLInputTabletDeviceStateMask in ml_input.h.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasType">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasToolType">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasPenTouchPosAndForce">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasAdditionalPenTouchData">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasPenTouchActive">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasConnectionState">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasPenDistance">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputTabletDeviceStateMask.HasTimeStamp">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.Left">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.Right">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.FarLeft">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.FarRight">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLResultCode">
            <summary>
            Identifier of Magic Leap API results
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Ok">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Pending">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Timeout">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Locked">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.UnspecifiedFailure">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.InvalidParam">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AllocFailed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PrivilegeDenied">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NotImplemented">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NotCompatible">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioNotImplemented">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioHandleNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidSampleRate">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidBitsPerSample">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidValidBits">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidSampleFormat">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidChannelCount">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInvalidBufferSize">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioBufferNotReady">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioFileNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioFileNotRecognized">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioResourceNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioResourceDiscarded">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioOperationUnavailable">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AudioInternalConfigError">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaPlayerServerDied">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaPlayerNotValidForProgressivePlayback">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaNotConnected">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaUnknownHost">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaCannotConnect">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaIO">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaConnectionLost">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaLegacy1">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaMalformed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaOutOfRange">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaBufferTooSmall">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaUnsupported">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaEndOfStream">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaFormatChanged">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDiscontinuity">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaOutputBuffersChanged">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaPermissionRevoked">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaUnsupportedAudioFormat">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaHeartbeatTerminateRequested">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMUnknown">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMNoLicense">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMLicenseExpired">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMSessionNotOpened">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMDecryptUnitNotInitialized">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMDecrypt">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMCannotHandle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMTamperDetect">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMNotProvisioned">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMDeviceRevoked">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMResourceBusy">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMInsufficientOutputProtection">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMLastUsedErrorCode">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMVendorMin">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaDRMVendorMax">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericInvalidOperation">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericBadType">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericNameNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericHandleNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericNoInit">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericAlreadyExists">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericDeadObject">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericFailedTransaction">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericBadIndex">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericNotEnoughData">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericWouldBlock">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericUnknownTransaction">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericFDSNotAllowed">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MediaGenericUnexpectedNull">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.DispatchCannotStartApp">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.DispatchInvalidPacket">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.DispatchNoAppFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.DispatchAppPickerDialogFailure">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityFailedToConnectToLocalService">
            <summary>
            The local service is not running, or it cannot be accessed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityFailedToConnectToCloudService">
            <summary>
            The service failed to access the cloud service.
            Either there is no IP connection or the cloud service is not available.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityCloudAuthentication">
            <summary>
            The user does not have the required privileges to use the requesting service
            or the refresh token used by the service is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityInvalidInformationFromCloud">
            <summary>
            Signature verification failed on the information returned by the cloud or a
            parsing error occurred.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityNotLoggedIn">
            <summary>
            The operation failed because the user is not logged in to the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityExpiredCredentials">
            <summary>
            The user's credentials have expired.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityFailedToGetUserProfile">
            <summary>
            Failed to retrieve attributes of the user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityUnauthorized">
            <summary>
            The cloud rejected the operation because the user is not authorized to execute it.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityCertificateError">
            <summary>
            The device failed to authenticate the server.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityRejectedByCloud">
            <summary>
            The cloud rejected the operation.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityAlreadyLoggedIn">
            <summary>
            The user is already logged in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityModifyIsNotSupported">
            <summary>
            The cloud does not support modification of an attribute value.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.IdentityNetworkError">
            <summary>
            The device is not connected to a network.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PassableWorldLowMapQuality">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PassableWorldUnableToLocalize">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PassableWorldServerUnavailable">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ScreensServiceNotAvailable">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ScreensPermissionDenied">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ScreensInvalidScreenId">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentFailedToConnectToLocalService">
            <summary>
            The local binder service was not found.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentServiceNotStarted">
            <summary>
            The local binder service is running but has not been registered by the login service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentFailedToConnectToCloud">
            <summary>
            The local binder service failed to connect to the cloud service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentCloudAuthentication">
            <summary>
            The cloud service rejected the request due to inappropriate credentials.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentFailedToLogin">
            <summary>
            The local server failed to log in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentLoginNotBegun">
            <summary>
            An attempt to complete the login was begun without starting the login.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentNotLoggedIn">
            <summary>
            The operation was rejected because the local server was not logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentAlreadyLoggedIn">
            <summary>
            The login request failed because the local server is already logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentLoginInProgress">
            <summary>
            The login request request failed because a login is already in progress.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentFailedToStartIdentityService">
            <summary>
            Having completed the login process with the cloud successfully, the service failed to
            start the local identity service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentDeviceNotRegistered">
            <summary>
            The serial number of the device is not recognized by the cloud so login failed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.TokenAgentDeviceNotConnected">
            <summary>
            The device is not yet connected to the cloud so login failed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.SnapshotPoseNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PrivilegeGranted">
            <summary>
            Used for MLPrivileges check and request privilege
            functions. Indicates if the user has decided to
            grant the privilege to the application.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PrivilegeNotGranted">
            <summary>
            Used for MLPrivileges check and request privilege
            functions. Indicates whether a privilege has not
            yet been requested or if the user has decided not
            to grant the privilege to the application.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ContactsHandleNotFound">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ContactsCompleted">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ContactsCancelled">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ContactsIllegalState">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.LocationUnknown">
            <summary>
            Unknown location error.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.LocationNetworkConnection">
            <summary>
            No connection to server.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.LocationNoLocation">
            <summary>
            No location data received.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.LocationProviderNotFound">
            <summary>
            Location provider is not found.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NetworkingServiceNotAvailable">
            <summary>
            The corresponding service is not available.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NetworkingServiceError">
            <summary>
            The corresponding service returned with error.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NetworkingWiFiDataStructureVersionError">
            <summary>
            The version number in MLNetworkingWiFiData is not recognized.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.NetworkingWiFiServiceInvalidState">
            <summary>
            WiFi service is not in the right state.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MovementInvalidMovementHandle">
            <summary>
            Not a valid MLHandle for movement session.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.MovementInvalidCollisionHandle">
            <summary>
            Not a valid MLHandle for a collision session.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsInvalidHandle">
            <summary>
            This MLHandle is not recognized.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsInvalidInviteeCount">
            <summary>
            Indicates number of invitees is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsInvalidSelecteeCount">
            <summary>
            Indicates number of selectees is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsCancellationPending">
            <summary>
            Indicates invite request has been found and the system is attempting to cancel the process.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsIllegalState">
            <summary>
            Request failed due to system being in an illegal state,
            e.g. user has not successfully logged-in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsNetworkFailure">
            <summary>
            MLConnectionsRegisterForInvite failed because the system had an error
            with network connectivity, or the servers could not be reached.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsAlreadyRegistered">
            <summary>
            MLConnectionsRegisterForInvite failed because the application is already registered to handle invite requests.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.ConnectionsSystemFailure">
            <summary>
            Indicates a general system failure
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.SecureStorageBlobNotFound">
            <summary>
            Blob not found.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.SecureStorageIOFailure">
            <summary>
            I/O failure.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLResult">
            <summary>
            Magic Leap API return value
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLResult.Code">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLResult.IsOk">
            <summary>
            Gets a value indicating whether the result code is MLResultCode.Ok
            Note that in some cases the result can be different than MLResultCode.Ok
            and still valid (e.g. MLResultCode.Pending, MLResultCode.PrivilegeGranted)
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode,System.Func{UnityEngine.XR.MagicLeap.MLResultCode,System.String})">
            <summary/>
            <param name="resultCode" />
            <param name="resultStringer">Function used to generate result message</param>
            <exception cref="T:System.ArgumentException">Thrown when resultStringer is null</exception>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode,System.String)">
            <summary/>
            <param name="resultCode" />
            <param name="message" />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Create MLResult using MagicLeapInternal.MagicLeapNativeBindings.MLGetResultString
            to generate the message.
            </summary>
            <param name="resultCode" />
            \internal
            TODO: Refactor existing generic constructor calls with MLGetResultString
            to use this constructor instead.
            \endinternal
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLSnapshot">
            <summary>
            Magic Leap utility perception snapshot functions
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSnapshot.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code from snapshot internal calls as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovementSettings">
            <summary>
            Settings for the movement session.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.SwayHistorySize">
             <summary>
             Number of frames of sway history to track.
            
             Increase to improve smoothing.
            
             Minimum value of 3.
            
             MLMovement.GetDefaultSettings will set this value to 30.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaxDeltaAngle">
             <summary>
             Maximum angle, in radians, between the oldest and newest headpose to object vector.
            
             Increasing this will increase the maximum speed of movement.
            
             Must be greater than zero.
            
             MLMovement.GetDefaultSettings will set value to 0.5.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.ControlDampeningFactor">
             <summary>
             A unitless number that governs the smoothing of Control input.
            
             Larger values will make the movement more twitchy, smaller values will make it smoother by
             increasing latency between Control input and object movement response by averaging multiple
             frames of input values.
            
             Must be greater than zero. Typical values would be between 0.5 and 10.
            
             MLMovement.GetDefaultSettings will set this value to 3.5.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaxSwayAngle">
             <summary>
             The maximum angle, in radians, that the object will be tilted left/right and front/back.
            
             Cannot be a negative value, but may be zero.
            
             MLMovement.GetDefaultSettings will set this value M_PI / 6.0.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaximumHeadposeRotationSpeed">
             <summary>
             The speed of rotation that will stop implicit depth translation from happening.
            
             The speed of rotation about the headpose Y-axis, in radians per second, that if exceeded,
             stops implicit depth translation from happening.
            
             Must be greater than zero.
            
             MLMovement.GetDefaultSettings will set this value M_PI * 5.0 / 3.0.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaximumHeadposeMovementSpeed">
             <summary>
             The maximum speed that headpose can move, in meters per second, that will stop implicit depth translation.
            
             If the headpose is moving faster than this speed (meters per second) implicit depth translation doesn't happen.
            
             Must be greater than zero.
            
             MLMovement.GetDefaultSettings will set this value to 0.75.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaximumDepthDeltaForSway">
             <summary>
             Distance in meters the object must move in depth since the last frame to cause maximum push/pull sway.
            
             Must be greater than zero.
            
             MLMovement.GetDefaultSettings will set this value to 0.1.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MinimumDistance">
             <summary>
             The minimum distance in meters the object can be moved in depth relative to the headpose.
            
             Must be greater than zero and less than MaximumDistance.
            
             MLMovement.GetDefaultSettings will set this value to 0.5.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaximumDistance">
             <summary>
             The maximum distance in meters the object can be moved in depth relative to the headpose.
            
             Must be greater than zero and MinimumDistance.
            
             MLMovement.GetDefaultSettings will set this value to 15.0.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.MaximumSwayTimeSeconds">
             <summary>
             Maximum length of time, in seconds, that lateral sway should take to decay.
            
             Maximum length of time (in seconds) lateral sway should take to decay back to an upright
             orientation once lateral movement stops.
            
             Must be greater than zero.
            
             MLMovement.GetDefaultSettings will set this value to 0.4.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementSettings.EndResolveTimeoutSeconds">
             <summary>
             Maximum length of time, in seconds, to allow MLMovementEnd to resolve before forcefully aborting.
            
             This serves as a fail-safe for instances where the object is in a bad position and can't resolve to a safe
             position.
            
             Must be greater than or equal to zero.
            
             MLMovement.GetDefaultSettings will set this value to 10.0.
             </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovement3DofControls">
             <summary>
             Parameters that define the input controls for 3DoF movement.
            
             Under 3DoF movement mode, only the orientation of the user's pointing device is taken into account
             for moving the target object and the pointing device's position is not used. Headpose
             position is also required by the algorithm, and is used as the center point around which
             the target object moves.
            
             When the movement session starts, the initial orientation of the control forms a baseline, from
             which further changes in the orientation will cause the object to move around the user.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement3DofControls.HeadposePosition">
            <summary>
            The worldspace position of the device's headpose.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement3DofControls.ControlRotation">
            <summary>
            The worldspace orientation of the user's pointing device.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovement6DofControls">
             <summary>
             Parameters that define the input controls for 6DoF movement.
            
             Under 6DoF movement mode, both the position and orientation of the user's pointing device is
             taken into account when moving the target object. Headpose position and orientation is also
             required by the algorithm.
            
             When the movement session starts, the initial orientation and position of the pointing device
             form a baseline, from which further changes in orientation or position will cause the object to
             move relative to the pointing device.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement6DofControls.HeadposePosition">
            <summary>
            The worldspace position of the device's headpose.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement6DofControls.HeadposeRotation">
            <summary>
            The worldspace orientation of the device's headpose.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement6DofControls.ControlPosition">
            <summary>
            The worldspace position of the user's pointing device.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement6DofControls.ControlRotation">
            <summary>
            The worldspace orientation of the user's pointing device.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovementObject">
            <summary>
            The relevant state of the object being moved.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementObject.ObjectPosition">
            <summary>
            The worldspace translation of the object to move.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovementObject.ObjectRotation">
            <summary>
            The worldspace orientation of the object to move.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovement3DofSettings">
             <summary>
             3DoF specific movement settings that must be provided when starting a 3DoF movement session.
            
             A 3DoF movement session relies on the orientation of the user's pointing device, but ignores the
             position, when moving the target object.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement3DofSettings.AutoCenter">
            <summary>
            If the object should automatically center on the control direction when beginning movement.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMovement6DofSettings">
             <summary>
             6DoF specific movement settings that must be provided when starting a 6DoF movement session.
            
             A 6DoF movement session relies on both the position and orientation of the user's pointing device
             when moving the target object.
             </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMovement6DofSettings.AutoCenter">
            <summary>
            If the object should automatically center on the control direction when beginning movement.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType">
            <summary>
            MusicService Error type
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.None">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Connectivity">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Timeout">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.GeneralPlayback">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Privilege">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.ServiceSpecific">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.NoMemory">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Unspecified">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceStatus">
            <summary>
            MusicService status
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.ContextChanged">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.Created">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.LoggedIn">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.LoggedOut">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.NextTrack">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.PrevTrack">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.TrackChanged">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.Unknown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption">
            <summary>
            MusicService playback options
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Playback">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Repeat">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Shuffle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Unknown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState">
            <summary>
            MusicService playback state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Playing">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Paused">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Stopped">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Error">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Unknown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState">
            <summary>
            MusicService repeat setting
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Off">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Song">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Album">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Unknown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState">
            <summary>
            MusicService shuffle setting
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.On">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.Off">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.Unknown">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceTrackType">
            <summary>
            MusicService enumerations used to get the Metadata information of a track.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceTrackType.Previous">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceTrackType.Current">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceTrackType.Next">
            <summary/>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceError">
            <summary>
            Contains the error type and error code received from the music service
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceError.ErrorType">
            <summary>The error type</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceError.ErrorCode">
            <summary>
            For ErrorTypes other than ServiceSpecific, the value of ErrorCode
            will match the value of ErrorType.
            When ErrorType is ServiceSpecific, the ErrorCode will be
            specific to the music streaming service
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLNetworkingWifiData">
            <summary>
            Contains wifi related data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLNetworkingWifiData.Rssi">
            <summary>
            WiFi RSSI in dbM.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLNetworkingWifiData.LinkSpeed">
            <summary>
            WiFi link speed in Mb/s.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLNetworkingWifiData.Frequency">
            <summary>
            WiFi frequency in MHz.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MagicLeapBitMask">
            <summary>
            Custom attribute to make it easy to turn enum fields into bit masks in
            the inspector. The enum type must be defined in order for the inspector
            to be able to know what the bits should be set to.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MagicLeapBitMask.PropertyType">
            <summary>
            The Type of the Enum that is being turned into a bit mask.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapBitMask.#ctor(System.Type)">
            <summary>
            Creates a new instance of BitMask with the passed in
            enum Type. This constructor call is automatic when
            decorating a field with this Attribute.
            </summary>
            <param name="propertyType">The Type value of the enum</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MagicLeapDevice">
            <summary>
            MagicLeap device class responsible for updating all trackers when they register and are enabled.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MagicLeapDevice._perceptionHandle">
            <summary/>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MagicLeapDevice.MAGIC_LEAP_DEVICE_NAME">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.WorldScale">
            <summary>
            The last scale assigned from the main camera's parent
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.HeadTrackingState">
            <summary/>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.PlatformLevel">
            <summary>
            Platform API Level that the OS supports.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.DefaultNearClipDistance">
            <summary>
            The default value that should be used for the Camera's near clipping plane.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.MinimumNearClipDistance">
            <summary>
            The lowest value that can be assigned to the Camera's near clipping plane.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Awake">
            <summary>
            Initializes the Magic Leap device state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnEnable">
            <summary>
            Subscribes to Unity events necessary for the device's operation.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnDisable">
            <summary>
            Cleans up event subscriptions that are no longer necessary.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnDestroy">
            <summary>
            Cleans up any resources the object has open.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnApplicationPause(System.Boolean)">
            <summary>
            Callback sent to all game objects when the player pauses.
            </summary>
            <param name="pauseStatus">The pause state of the application.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Update">
            <summary>
            Updates the perception snapshot and emits an event to inform subscribers of the updated state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.IsReady">
            <summary>
            Check if underlying Unity VR Device setup is ready
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Register(System.Action{System.Single})">
            <summary>
            Register a MagicLeap API Update callback to be called on Update of this MonoBehaviour.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterOnApplicationPause(System.Action{System.Boolean})">
            <summary>
            Register a MagicLeap API application pause callback to be called OnApplicationPause of this MonoBehaviour.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Unregister(System.Action{System.Single})">
            <summary>
            Unregister a previously registered MagicLeap API Update callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterOnApplicationPause(System.Action{System.Boolean})">
            <summary>
            Unregister a previously registered MagicLeap API application pause callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterHeadTrackingModeChanged(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Registers a callback to be called when only rotation head pose is available,
            or when full head pose is available again.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterHeadTrackingModeChanged(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Unregisters a previously registered head tracking mode change callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterOnHeadTrackingMapEvent(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent})">
            <summary>
            Registers a callback to be called when map events occur.
            This functionality is only supported on platform api level 2 and onwards.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterOnHeadTrackingMapEvent(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingMapEvent})">
            <summary>
            Unregisters a previously registered map event callback.
            This functionality is only supported on platform api level 2 and onwards.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UpdateWorldScale">
            <summary>
            Apply the world scale set on the current main camera's parent.
            </summary>
            <returns>
            True if the scale was set false if the main camera or main camera parent was not found.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterGestureSubsystem">
            <summary>
            Attempts to register the Unity GestureSubsystem.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterGestureSubsystem">
            <summary>
            Attempts to unregister the GestureSubsystem.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterEndOfFrameUpdate(System.Action)">
            <summary>
            Register a function to be executed per frame at the end of every frame, after all cameras and GUI is rendered
            but before displaying the frame on screen
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterEndOfFrameUpdate(System.Action)">
            <summary>
            Unregister a function to no longer be executed at the end of the frame
            </summary>
        </member>
        <member name="T:MagicLeapInternal.AudioNativeBindings">
            <summary>
            See ml_audio.h for additional comments.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioGetOutputDevice(UnityEngine.XR.MagicLeap.MLAudioOutputDevice@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioGetMasterVolume(System.Single@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioSetMicMute(System.Boolean)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioIsMicMuted(System.Boolean@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioSetMasterVolumeCallback(MagicLeapInternal.AudioNativeBindings.MLAudioMasterVolumeChangedCallback,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.AudioNativeBindings.MLAudioSetMicMuteCallback(MagicLeapInternal.AudioNativeBindings.MLAudioMicMuteCallback,System.IntPtr)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.ConnectionsApiNativeBindings">
            <summary>
            See ml_connections.h for additional comments
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsDLL">
            <summary>
            MLConnections library name
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.RecommendedInviteeCount">
            <summary>
            This is the recommended number of invitees from the CAPI. This is overwritten in our implementation.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.InviteeCount">
            <summary>
            Max number of connections to be invited. Min limit is 1.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.InviteUserPrompt">
            <summary>
            Text prompt to be displayed to the user with invitee selection dialog.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.InvitePayload">
            <summary>
            Payload message to be delivered to remote copy of the application with invite in serialized text form.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.DefaultInviteeFilter">
            <summary>
            Type of filter applied by default to ML connections list in invitee selection dialog.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal.Initialize">
            <summary>
            Initializes default values for MLConnectionsInviteArgs.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks">
            <summary>
            Links to MLConnectionsInviteCallbacks in ml_input.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.OnRegistrationCompleteCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.OnRegistrationComplete">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.OnInvitationCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.OnInvitation">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks.Initialize">
            <summary>
            Initializes default values for MLConnectionsInviteCallbacks.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsStartup">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsShutdown">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsRegistrationStartup(System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsRegistrationShutdown(System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsRegisterForInvite(System.UInt64,MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteCallbacks,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsRequestInvite(MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsInviteArgsInternal@,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsTryGetInviteStatus(System.UInt64,UnityEngine.XR.MagicLeap.MLConnectionsInviteStatus@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsCancelInvite(System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsReleaseRequestResources(System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ConnectionsApiNativeBindings.MLConnectionsGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.ContactsApiNativeBindings">
            <summary>
            See ml_contacts.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.ContactsApiNativeBindings.MLContactsDLL">
            <summary>
            MLContacts library name
            </summary>
        </member>
        <member name="M:MagicLeapInternal.ControllerNativeBindings.MLInputStartControllerFeedbackPatternVibe(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ControllerNativeBindings.MLInputStartControllerFeedbackPatternLED(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.ControllerNativeBindings.MLInputStartControllerFeedbackPatternEffectLED(System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MLCVCameraID">
            <summary>
            MLCVCameraID enum from ml_cv_camera.h
            </summary>
        </member>
        <member name="T:MagicLeapInternal.CVCameraApiNativeBindings">
            <summary>
            See ml_cv_camera.h for additional comments.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.#ctor">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MaxDistortionCoefficients">
            <summary>
            MLCVCameraIntrinsics_MaxDistortionCoefficients from ml_cv_camera.h
            </summary>
        </member>
        <member name="T:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal">
            <summary>
            Links to MLCVCameraIntrinsicCalibrationParameters in ml_cv_camera.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.Version">
            <summary>
            Structure version.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.Width">
            <summary>
            Camera width.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.Height">
            <summary>
            Camera height.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.FocalLength">
            <summary>
            Camera focal length.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.PrincipalPoint">
            <summary>
            Camera principle point.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.FOV">
            <summary>
            Field of view.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.Distortion">
            <summary>
            Distortion vector.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal.Initialize">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraTrackingCreate(System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraTrackingDestroy(System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraGetIntrinsicCalibrationParameters(System.UInt64,MagicLeapInternal.MLCVCameraID,MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraIntrinsicCalibrationParametersInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.CVCameraApiNativeBindings.MLCVCameraGetFramePose(System.UInt64,System.UInt64,MagicLeapInternal.MLCVCameraID,System.UInt64,MagicLeapInternal.MagicLeapNativeBindings.MLTransform@)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.DispatchApiNativeBindings">
            <summary>
            See ml_dispatch.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.EyeApiNativeBindings">
            <summary>
            See ml_eye_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.HandMeshingApiNativeBindings">
            <summary>
            See ml_hand_meshing.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.HeadApiNativeBindings">
            <summary>
            See ml_head_tracking.h for additional comments.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.IdentityApiNativeBindings">
            <summary>
            See ml_identity.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings">
            <summary>
            See ml_image.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImageType">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.BitMask">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGB24">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGBA32">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImage">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Width">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Height">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.ImageType">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Alignment">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Image">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings">
            <summary>
            See ml_image_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings">
            <summary>
            See ml_input.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputDll">
            <summary>
            ML input DLL name.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllers">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllerTouchpadTouches">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.TabletAdditionalPenDataSize">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureTypeCount">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureDirectionCount">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ButtonCount">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConfiguration.Dof">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState">
            <summary>
            Links to MLInputTabletDeviceState in ml_input.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.Type">
            <summary>
            Type of this tablet device.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.ToolType">
            <summary>
            Type of tool used with the tablet.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.PenTouchPosAndForce">
            <summary>
            Current touch position (x,y) and force (z).
            Position is in the [-1.0,1.0] range and force is in the [0.0,1.0] range.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.AdditionalPenTouchData">
            <summary>
            Additional coordinate values (x,y,z)
            It could contain data specific to the device type.
            Example: It could hold tilt values while using pen
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.IsPenTouchActive">
            <summary>
            Is touch active.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.IsConnected">
            <summary>
            If this tablet is connected.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.PenDistance">
            <summary>
            Distance between pen and tablet.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.TimeStamp">
            <summary>
            Time stamp of the event.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.ValidFieldsFlag">
            <summary>
            Flags to denote which of the above fields are valid.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceState.Initialize">
            <summary>
            Intializes the default values for MLInputTabletDeviceState. Links to MLInputTabletDeviceStateInit in ml_input.h.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList">
            <summary>
            Links to MLInputTabletDeviceStatesList in ml_input.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList.Count">
            <summary>
            Number of tablet device states in this list.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList.Data">
            <summary>
            Pointer referring to the array of MLInputTabletDeviceState.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList.Initialize">
            <summary>
            Intializes the default values for MLInputTabletDeviceStatesList. Links to MLInputConnectedDevicesListInit in ml_input.h.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList">
            <summary>
            Links to MLInputConnectedDevicesList in ml_input.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.ControllerCount">
            <summary>
            Number of connected controllers.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.ControllerIds">
            <summary>
            Pointer to the array of connected controller IDs(byte).
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.TabletDeviceCount">
            <summary>
            Number of connected tablet devices.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.TabletDeviceIds">
            <summary>
            Pointer to the array of connected tablet device IDs(byte).
            </summary>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList.Initialize">
            <summary>
            Intializes the default values for MLInputConnectedDevicesList. Links to MLInputConnectedDevicesListInit in ml_input.h.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks">
            <summary>
            Links to MLInputTabletDeviceCallbacks in ml_input.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnPenTouchEventCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnPenTouchEvent">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnTouchRingEventCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnTouchRingEvent">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnButtonDownCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnButtonDown">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnButtonUpCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnButtonUp">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnConnectCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnConnect">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnDisconnectCallback">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.OnDisconnect">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks.Initialize">
            <summary>
            Links to MLInputTabletDeviceCallbacksInit in ml_input.h.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputCreate(System.IntPtr,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputDestroy(System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputGetConnectedDevices(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputReleaseConnectedDevicesList(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputConnectedDevicesList@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetTabletDeviceCallbacks(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceCallbacks@,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetTabletDeviceCallbacks(System.UInt64,System.IntPtr,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputGetTabletDeviceStates(System.UInt64,System.Byte,MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputReleaseTabletDeviceStates(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputTabletDeviceStatesList@)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.LightingTrackingApiNativeBindings">
            <summary>
            See ml_lighting_tracking.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LightingTrackingApiNativeBindings.CameraCount">
            <summary>
            Number of cameras.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.LocaleApiNativeBindings">
            <summary>
            See ml_locale.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocaleApiNativeBindings.MLLocaleDll">
            <summary>
            ML Locale DLL name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.LocaleApiNativeBindings.MLLocaleGetSystemLanguage(System.IntPtr@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.LocaleApiNativeBindings.MLLocaleGetSystemCountry(System.IntPtr@)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.LocationApiNativeBindings">
            <summary>
            See ml_location.h for additional comments
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationDLL">
            <summary>
            MLLocation library name
            </summary>
        </member>
        <member name="T:MagicLeapInternal.LocationApiNativeBindings.MLLocationDataMask">
            <summary>
            Mask value to determine the validity of #MLLocation data.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.LocationApiNativeBindings.MLLocationData">
            <summary>
            Location request result.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Version">
            <summary>
            Version of this structure.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Latitude">
            <summary>
            Location latitude.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Longitude">
            <summary>
            Location longitude.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.LocationMask">
            <summary>
            Location mask value.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.PostalCode">
            <summary>
            Approximate postal code.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Timestamp">
            <summary>
            Epoch timestamp in milliseconds of the location data.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Accuracy">
            <summary>
            The radius in meters.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.LocationApiNativeBindings.MLLocationData.Initialize">
            <summary>
            Intializes the default values for MLLocationData.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings">
            <summary>
            Defines C# API interface to C-API layer
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.#ctor">
            <summary>
            Define constructor private to prevent instantiation of the class through new
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionClientDll">
            <summary>
            Perception library name string.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLPlatformDll">
            <summary>
            Platform level library name string.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.InvalidHandle">
            <summary>
            The 64 bit id for an invalid native handle.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLHandleIsValid(System.UInt64)">
            <summary>
            Checks if 64 bit handle is valid.
            </summary>
            <returns><c>true</c>, if handle is valid, <c>false</c> if invalid.</returns>
            <param name="handle">The handle to check.</param>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Returns an ASCII string for MLResultGlobal codes.
            </summary>
            <param name="result">The input MLResult enum from ML API methods.</param>
            <returns>ASCII string containing readable version of result code.</returns>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState">
            <summary>
            The current state of a given tracker.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Initializing">
            <summary>
            The tracker is not ready, don't use the data.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Ready">
            <summary>
            The tracker's data can be used.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec2f">
            <summary>
            2D vector represented with X and Y floats.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec3f">
            <summary>
            3D vector in native format.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf">
             <summary>
             Quaternion in native format.
             </summary>
            
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLTransform">
            <summary>
            Information used to transform from one coordinate frame to another.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Rotation">
            <summary>
            The rotation of the coordinate frame to apply after the translation.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Position">
            <summary>
            The translation to apply to get the coordinate frame in the proper location.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f">
            <summary>
            4x4 matrix in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f.matrix_colmajor">
            <summary>
            The 16 matrix values.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRectf">
            <summary>
            2D rectangle in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRecti">
            <summary>
            2D rectangle with integer values in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLUUID">
            <summary>
            Universally unique identifier
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLUUIDBytes">
            <summary>
            Universally unique identifier, byte array
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLUUIDBytes.data">
            <summary>
            The 16 byte data array.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID">
            <summary>
            A unique identifier which represents a coordinate frame.
            </summary>
        </member>
        <member name="P:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.EmptyFrame">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.Equals(System.Object)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.GetHashCode">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.ToString">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.ToGuid">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.op_Equality(MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.op_Inequality(MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionGetSnapshot(System.IntPtr@)">
            <summary>
            Returns pointer to the current MLSnapshot structure
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionReleaseSnapshot(System.IntPtr)">
            <summary>
            Releases a previously acquired snapshot from MLPerceptionGetSnapshot
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLSnapshotGetTransform(System.IntPtr,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID@,MagicLeapInternal.MagicLeapNativeBindings.MLTransform@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLSnapshotGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings">
            <summary>
            See ml_movement.h for additional comments
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementDll">
            <summary>
            MLMovement library name
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.#ctor">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal">
            <summary>
            Links to MLMovementSettings in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.SwayHistorySize">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaxDeltaAngle">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.ControlDampeningFactor">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaxSwayAngle">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaximumHeadposeRotationSpeed">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaximumHeadposeMovementSpeed">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaximumDepthDeltaForSway">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MinimumDistance">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaximumDistance">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.MaximumSwayTimeSeconds">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.EndResolveTimeoutSeconds">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal.Initialize">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal">
            <summary>
            Links to MLMovement3DofControls in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal.HeadposePosition">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal.ControlRotation">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal.Initialize">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal">
            <summary>
            Links to MLMovement6DofControls in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.HeadposePosition">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.HeadposeRotation">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.ControlPosition">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.ControlRotation">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal.Initialize">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal">
            <summary>
            Links to MLMovementObject in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal.ObjectPosition">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal.ObjectRotation">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal.Initialize">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofSettingsInternal">
            <summary>
            Links to MLMovement3DofSettings in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofSettingsInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofSettingsInternal.AutoCenter">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofSettingsInternal.Initialize">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofSettingsInternal">
            <summary>
            Links to MLMovement6DofSettings in ml_movement.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofSettingsInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofSettingsInternal.AutoCenter">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofSettingsInternal.Initialize">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementGetDefaultSettings(MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementStart3Dof(MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofSettingsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal@,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementStart6Dof(MagicLeapInternal.MovementApiNativeBindings.MLMovementSettingsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofSettingsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal@,MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal@,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementChangeDepth(System.UInt64,System.Single)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementChangeRotation(System.UInt64,System.Single)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementUpdate3Dof(System.UInt64,MagicLeapInternal.MovementApiNativeBindings.MLMovement3DofControlsInternal@,System.Single,MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementUpdate6Dof(System.UInt64,MagicLeapInternal.MovementApiNativeBindings.MLMovement6DofControlsInternal@,System.Single,MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementEnd(System.UInt64,System.Single,MagicLeapInternal.MovementApiNativeBindings.MLMovementObjectInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementStartHardCollision(System.UInt64,MagicLeapInternal.MagicLeapNativeBindings.MLVec3f@,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementStartSoftCollision(System.UInt64,MagicLeapInternal.MagicLeapNativeBindings.MLVec3f@,System.Single,System.Single,System.UInt64@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementUpdateHardCollision(System.UInt64,System.UInt64,MagicLeapInternal.MagicLeapNativeBindings.MLVec3f@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementEndCollision(System.UInt64,System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MovementApiNativeBindings.MLMovementGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.MusicServiceNativeBindings">
            <summary>
            See ml_music_service.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDLL">
            <summary>
             ML music dll name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceConnect(System.String)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDisconnect">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetCallbacks(System.IntPtr,System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetAuthString(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetURL(System.IntPtr)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetPlayList(System.IntPtr[],System.UInt64)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStart">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStop">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePause">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceResume">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSeek(System.UInt32)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceNext">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePrevious">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetShuffle(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetRepeat(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetVolume(System.Single)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetTrackLength(System.UInt32@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetCurrentPosition(System.UInt32@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetStatus(UnityEngine.XR.MagicLeap.MLMusicServiceStatus@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetError(UnityEngine.XR.MagicLeap.MLMusicServiceErrorType@,System.Int32@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetPlaybackState(UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetRepeatState(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetShuffleState(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetVolume(System.Single@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetMetadataForIndex(System.Int32,MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceMetadata@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceReleaseMetadata(MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceMetadata@)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.NetworkingApiNativeBindings">
            <summary>
            See ml_networking.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingDll">
            <summary>
            MLNetworking library name
            </summary>
        </member>
        <member name="M:MagicLeapInternal.NetworkingApiNativeBindings.#ctor">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal">
            <summary>
            Links to MLNetworkingWifiData in ml_networking.h.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal.Version">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal.Rssi">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal.LinkSpeed">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal.Frequency">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal.Initialize">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingIsInternetConnected(System.Boolean@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingGetWiFiData(MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingWifiDataInternal@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.NetworkingApiNativeBindings.MLNetworkingGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary/>
        </member>
        <member name="F:MagicLeapInternal.PCFApiNativeBindings.MLPCFFrameStateInternal.Confidence">
            <summary>
            A confidence value (from [0, 1]) representing the confidence in the
            Persistent Coordinate Frame error within the valid radius.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.PCFApiNativeBindings.MLPCFFrameStateInternal.ValidRadiusM">
            <summary>
            The radius (in meters) within which the confidence is valid.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.PCFApiNativeBindings.MLPCFFrameStateInternal.RotationErrDeg">
            <summary>
            The rotational error (in degrees).
            </summary>
        </member>
        <member name="F:MagicLeapInternal.PCFApiNativeBindings.MLPCFFrameStateInternal.TranslationErrM">
            <summary>
            The translation error (in meters).
            </summary>
        </member>
        <member name="T:MagicLeapInternal.PlanesApiNativeBindings">
            <summary>
            See ml_planes.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.PrivilegesApiNativeBindings">
            <summary>
            See ml_privileges.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesDll">
            <summary>
            ML privileges DLL name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesStartup">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesShutdown">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesCheckPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilegeAsync(UnityEngine.XR.MagicLeap.MLPrivilegeId,System.IntPtr@)">
            <summary/>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilegeTryGet(System.IntPtr)">
            <summary/>
        </member>
        <member name="T:MagicLeapInternal.RaycastApiNativeBindings">
            <summary>
            See ml_raycast.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ScreensNativeBindings">
            <summary>
            See ml_screens.h for additional comments
            </summary>
        </member>
        <member name="P:MagicLeapInternal.ScreensNativeBindings.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.SecureStorageApiNativeBindings">
            <summary>
            See ml_secure_storage.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.TokenAgentApiNativeBindings">
            <summary>
            See ml_token_agent.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MLTextureUtils">
            <summary>
            Class containing utility functions to convert Unity Texture to Lumin OS compatible data structures.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLTextureUtils.ConvertToByteArray(UnityEngine.Texture2D,System.Int32@)">
            <summary>
            Convert Unity Texture2D to a byte array.
            Texture2D should be in one of the following formats: DXT1, RGBA32, RGB24.
            For DXT1 and RGBA32, resulting byte array is in RGBA format.
            For RGB24, resulting byte array is in RGB format.
            The origin of the byte array will be at the top left corner.
            Returns null on unsupported formats.
            </summary>
            <param name="texture">Texture to extract byte array from</param>
            <param name="numChannels">Out parameter to determine how many bytes per pixel</param>
        </member>
        <member name="T:MagicLeapInternal.MLConvert">
            <summary>
            Utility class used for converting vectors and matrices between native and unity format.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single)">
            <summary>
            Gets a float value converted from meters to Unity units.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLVec3f,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a native vector.
            </summary>
            <param name="vec">A native vector.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a x, y and z parameters.
            </summary>
            <param name="x">X component</param>
            <param name="y">Y component</param>
            <param name="z">Z component</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf,System.Boolean)">
            <summary>
            Creates a Unity quaternion from a native vector.
            </summary>
            <param name="quat">A native quaternion.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLMat4f)">
            <summary>
            Creates Unity 4x4 matrix from native matrix.
            </summary>
            <param name="mat">A native matrix.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLTransform,System.Boolean,System.Boolean)">
            <summary>
            Creates Unity 4x4 matrix from native transform.
            </summary>
            <param name="transform">A native transform.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLUUID)">
            <summary>
            Creates a System.Guid from an MLUUID
            </summary>
            <param name="uuid">A native UUID</param>
            <returns>A Sytem.Guid</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Boolean,System.Boolean)">
            <summary>
            Creates native transform from a Unity matrix.
            </summary>
            <param name="mat">A Unity matrix.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native transform.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Single[]@)">
            <summary>
            Fills out array with values from 4x4 Unity matrix.
            </summary>
            <param name="mat">An input native matrix.</param>
            <param name="matrixColMajor">An array to populate in Unity format.</param>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Creates native 3d vector from a Unity vector.
            </summary>
            <param name="vec">A Unity vector.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Quaternion,System.Boolean)">
            <summary>
            Creates native quaternion from a Unity quaternion.
            </summary>
            <param name="quat">A Unity quaternion.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <returns>A native quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(System.Single)">
            <summary>
            Gets a float value converted from Unity units to meters.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(System.Guid)">
            <summary>
            Creates an MLUUID from a System.Guid
            </summary>
            <param name="guid">A System.Guid</param>
            <returns>A native MLUUID</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FloatsToMat(System.Single[])">
            <summary>
            Creates Unity 4x4 matrix from an array of 16 floats.
            </summary>
            <param name="vals">An array of 16 floats.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetPositionFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the position vector stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity vector representing a position.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetRotationFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the rotation quaternion stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUTF8Snipped(System.String,System.Int32)">
            <summary>Take a string, snips it to a desired length and converts it to UTF8.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeAscii(System.Byte[])">
            <summary>Decodes a buffer of bytes into an Ascii string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.Byte[])">
            <summary>Decodes a buffer of bytes into a UTF8 string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.EncodeToUnmanagedUTF8(System.String)">
            <summary>
            Converts a managed string into an unmanaged null terminated UTF-8 string.
            </summary>
            <param name="s">The managed string to convert</param>
            <returns>A pointer to the unmanaged string</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.IntPtr)">
            <summary>
            Converts an unmanaged null terminated UTF-8 string into a managed string.
            </summary>
            <param name="nativeString">The unmanaged string to convert</param>
            <returns>A managed string</returns>
        </member>
    </members>
</doc>
